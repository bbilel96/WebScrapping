{"version":3,"sources":["registerServiceWorker.js","actions/backend.js","reducers/backend.js","actions/status.js","reducers/status.js","actions/projects.js","reducers/projects.js","actions/jobs.js","reducers/jobs.js","utils/helpers.js","utils/Backend.js","components/ScrapyDoNav.js","components/BackendStatus.js","components/Dashboard.js","utils/backendActions.js","components/AlertDialog.js","components/ScheduleDialog.js","components/YesNoDialog.js","components/ProjectListItem.js","components/PushProjectDialog.js","components/ProjectList.js","components/JobListItem.js","components/JobList.js","components/About.js","components/WrongRoute.js","components/ScrapyDoApp.js","index.js","utils/backendStoreConnectors.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","BACKEND_STATUS_SET","BACKEND_COUNTDOWN_SET","BACKEND_CONNECTING","BACKEND_OPENED","backendStatusSet","status","type","backendState","countdown","DAEMON_STATUS_SET","PROJECTS_STATUS_SET","JOBS_STATUS_SET","statusState","memoryUsage","cpuUsage","time","timezone","uptime","daemonVersion","projects","spiders","jobsRun","jobsSuccessful","jobsFailed","jobsCanceled","jobsScheduled","PROJECT_PUSH","PROJECT_REMOVE","PROJECT_LIST_SET","projectsState","JOB_LIST_SET","JOB_UPDATE","JOB_REMOVE","jobsState","filterJob","jobId","newState","Object","assign","statusToListName","capitalizeFirst","str","charAt","toUpperCase","slice","toLowerCase","scheduleValid","spec","directives","split","length","interval","parseInt","isNaN","directive_names","reverse","directive","pop","indexOf","arg","argSplit","payloadValid","obj","JSON","parse","e","Backend","connect","ws","Error","countdownTimer","clearInterval","dispatchEvent","CONNECTING","WebSocket","wsUrl","onopen","OPENED","nextTry","onmessage","evt","message","data","MSG_RECEIVED","onclose","CLOSED","COUNTDOWN","setInterval","addEventListener","listener","eventListeners","add","removeEventListener","delete","event","toRemove","REMOVE_LISTENER","push","sendMessage","readyState","OPEN","Promise","reject","id","text","possible","i","Math","floor","random","makeId","newMessage","resolve","cleanData","send","stringify","loc","wsProtocol","protocol","this","host","Set","backend","ScrapyDoNav","Navbar","bg","variant","collapseOnSelect","expand","to","Brand","Toggle","aria-controls","Collapse","Nav","className","Link","Component","BackendStatus","props","Alert","onClick","retryNow","preventDefault","href","ownProps","dispatch","Dashboard","serverTime","moment","unix","tz","format","src","alt","Table","striped","bordered","size","projectRemove","name","action","projectPush","archiveData","jobCancel","jobSchedule","project","spider","schedule","description","payload","AlertDialog","visible","close","setState","show","Modal","aria-labelledby","centered","Body","Button","ScheduleDialog","projectsDisabled","spidersDisabled","scheduleDisabled","submitDisabled","scheduleValidated","payloadValidated","setTimeout","alert","onProjectChange","target","value","onSpiderChange","onScheduleChange","onPayloadChange","provideController","projectSelector","Form","Group","controlId","Label","Control","as","placeholder","disabled","onChange","__projects","map","spiderSelector","specDocLink","scheduleInput","isInvalid","isValid","Feedback","descriptionInput","payloadInput","rows","ref","el","Footer","keys","sort","YesNoDialog","no","fn","yes","noVariant","yesVariant","noText","yesText","ProjectListItem","showRemoveDialog","alertDialog","msg","removeDialog","ctl","scheduleDialogCtl","Card","Header","connected","projectName","PushProjectDialog","pushEnabled","archivePromise","result","fileSelectorChange","files","reader","FileReader","readAsBinaryString","onload","btoa","onerror","accept","ProjectList","projectNames","list","dialog","statusToLabel","eventKey","useAccordionToggle","getLogURL","jobID","isError","baseUrl","logType","JobListItem","showCancelDialog","job","identifier","cancelDialog","timestamp","dateTime","cancelButton","outCollapse","outToggle","outAccordionKey","errCollapse","errToggle","errAccordionKey","Accordion","style","height","url","stream","follow","extraLines","enableSearch","caseInsensitive","selectableLines","jobList","outLog","errLog","payloadCollapse","payloadToggle","payloadAccordionKey","highlighted","hljs","highlight","dangerouslySetInnerHTML","__html","secondaryPanel","title","ListGroup","Item","fromNow","Badge","actor","jobs","JobList","jobIds","params","scheduleButton","jobStatus","key","sortBy","About","website","license","pkg","WrongRoute","textAlign","margin","color","ScrapyDoApp","exact","path","component","store","createStore","combineReducers","reduce","acc","current","listName","__REDUX_DEVTOOLS_EXTENSION__","daemonStatusSet","projectsStatusSet","jobsStatusSet","ReactDOM","render","document","getElementById","URL","process","origin","fetch","response","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"uNAUMA,G,4BAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,4DAsCN,SAASC,EAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTI,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,WAK1BC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,4CAMrBC,OAAM,SAAAC,GACLH,QAAQG,MAAM,4CAA6CA,M,oCCxEpDC,EAAqB,qBACrBC,EAAwB,wBAExBC,EAAqB,qBACrBC,EAAiB,iBAGvB,SAASC,EAAiBC,GAC/B,MAAO,CACLC,KAAMN,EACNK,UCNJ,IAAME,EAAe,CACnBF,OAAQH,EACRM,UAAW,GCNN,IAAMC,EAAoB,oBACpBC,EAAsB,sBACtBC,EAAkB,kBCE/B,IAAMC,EAAc,CAClBC,YAAa,EACbC,SAAU,EACVC,KAAM,EACNC,SAAU,MACVnC,SAAU,UACVoC,OAAQ,KACRC,cAAe,QACfC,SAAU,EACVC,QAAS,EACTC,QAAS,EACTC,eAAgB,EAChBC,WAAY,EACZC,aAAc,EACdC,cAAe,GClBV,IAAMC,EAAe,eACfC,EAAiB,iBACjBC,EAAmB,mBCEhC,IAAMC,EAAgB,GCJf,IAAMC,EAAe,eACfC,EAAa,aACbC,EAAa,aCA1B,IAAMC,EAAY,GAElB,SAASC,EAAUxC,EAAOyC,GACxB,IAAIC,EAAWC,OAAOC,OAAO5C,GAK7B,MAJG,WAAY0C,UACNA,EAAQ,OAAWD,GACzB,cAAeC,UACTA,EAAQ,UAAcD,GACxBC,EAGT,SAASG,EAAiBlC,GACxB,MAAc,cAAXA,GAAqC,YAAXA,GAAmC,YAAXA,EAC5C,SACF,Y,qBCAF,SAASmC,EAAgBC,GAC9B,OAAOA,EAAIC,OAAO,GAAGC,cAAgBF,EAAIG,MAAM,GAAGC,cAM7C,SAASC,EAAcC,GAI5B,GAAY,QAATA,EACD,OAAO,EAKT,IAAIC,EAAaD,EAAKF,cAAcI,MAAM,KAC1C,GAAyB,IAAtBD,EAAWE,OACZ,OAAO,EAET,GAAqB,UAAlBF,EAAW,GACZ,OAAO,EAET,GAAGA,EAAWE,OAAS,EACrB,OAAO,EAKT,IAAMC,EAAWC,SAASJ,EAAW,GAAI,IACzC,GAAIK,MAAMF,GAMRH,EAAaA,EAAWJ,MAAM,OANX,CACnB,GAAGI,EAAWE,OAAS,EACrB,OAAO,EACTF,EAAaA,EAAWJ,MAAM,GAQhC,IAAMU,EAAkB,CACtB,SAAU,UAAW,SAAU,UAAW,OAAQ,QAAS,MAAO,OAClE,OAAQ,QAAS,SAAU,UAAW,YAAa,WAAY,SAC/D,WAAY,SAAU,KAAM,MAG9B,IAFAN,EAAaA,EAAWO,UAElBP,EAAWE,QAAQ,CAIvB,IAAMM,EAAYR,EAAWS,MAC7B,GAAGH,EAAgBI,QAAQF,GAAa,EACtC,OAAO,EAKT,GAAiB,OAAdA,EAAoB,CACrB,IAAIR,EAAWE,OACb,OAAO,EACT,IAAIS,EAAMX,EAAWS,MAErB,GADAE,EAAMP,SAASO,EAAK,IACjBN,MAAMM,GACP,OAAO,OAKN,GAAiB,OAAdH,EAAoB,CAC1B,IAAIR,EAAWE,OACb,OAAO,EACT,IAAIS,EAAMX,EAAWS,MACjBG,EAAWD,EAAIV,MAAM,KACzB,GAAuB,IAApBW,EAASV,OACV,OAAO,EAET,GADAS,EAAMP,SAASQ,EAAS,GAAI,IACzBP,MAAMM,GACP,OAAO,EAET,GADAA,EAAMP,SAASQ,EAAS,GAAI,IACzBP,MAAMM,GACP,OAAO,GAIb,OAAO,EAMF,SAASE,EAAapB,GAC3B,IAAIqB,EAAM,KACV,IACEA,EAAMC,KAAKC,MAAMvB,GACjB,MAAOwB,GACP,OAAO,EAET,MAAmB,kBAARH,GAA4B,OAARA,EC9G1B,IAAMI,EAeX,aAAe,IAAD,gCAmBdC,QAAU,WAIR,GAAG,EAAKC,GACN,MAAMC,MAAM,qBAEX,EAAKC,gBACNC,cAAc,EAAKD,gBAKrB,EAAKE,cAAcN,EAAQO,WAAY,MAEvC,EAAKL,GAAK,IAAIM,UAAU,EAAKC,OAK7B,EAAKP,GAAGQ,OAAS,WACf,EAAKJ,cAAcN,EAAQW,OAAQ,MACnC,EAAKC,QAAU,GAMjB,EAAKV,GAAGW,UAAY,SAACC,GACnB,IAAMC,EAAUlB,KAAKC,MAAMgB,EAAIE,MAC/B,EAAKV,cAAcN,EAAQiB,aAAcF,IAM3C,EAAKb,GAAGgB,QAAU,WAChB,EAAKZ,cAAcN,EAAQmB,OAAQ,MAEnC,EAAKjB,GAAK,KACV,EAAKU,SAAW,EACb,EAAKA,QAAU,MAChB,EAAKA,QAAU,KACjB,EAAKtE,UAAY,EAAKsE,QAAU,EAEhC,EAAKN,cAAcN,EAAQoB,UAAW,EAAK9E,UAAY,GAUvD,EAAK8D,eAAiBiB,aART,WACX,EAAKf,cAAcN,EAAQoB,UAAW,EAAK9E,WACrB,IAAnB,EAAKA,UAIR,EAAKA,WAAa,EAHhB,EAAK2D,YAK+B,OA1E9B,KAiFdqB,iBAAmB,SAACC,GAClB,EAAKC,eAAeC,IAAIF,IAlFZ,KAwFdG,oBAAsB,SAACH,GACrB,EAAKC,eAAeG,OAAOJ,IAzFf,KA+FdjB,cAAgB,SAACsB,EAAOZ,GACtB,IAD+B,EAC3Ba,EAAW,GADgB,cAET,EAAKL,gBAFI,IAE/B,IAAI,EAAJ,qBAA2C,CAAC,IAAlCD,EAAiC,QAC/BA,EAASK,EAAOZ,KACfhB,EAAQ8B,iBACjBD,EAASE,KAAKR,IALa,8BAO/B,IAAI,IAAJ,MAAsBM,EAAtB,gBAAI,IAAMN,EAAQ,KAChB,EAAKG,oBAAoBH,KAvGf,KA6GdS,YAAc,SAACjB,GAIb,IAAI,EAAKb,IAAM,EAAKA,GAAG+B,aAAezB,UAAU0B,KAC9C,OAAOC,QAAQC,OAAO,IAAIjC,MAAM,2BAKlC,IAAMkC,EDxIH,SAAgBrD,GAIrB,IAHA,IAAIsD,EAAO,GACPC,EAAW,uCAEPC,EAAI,EAAGA,EAAIxD,EAAQwD,IACzBF,GAAQC,EAAS/D,OAAOiE,KAAKC,MAAMD,KAAKE,SAAWJ,EAASvD,SAE9D,OAAOsD,ECiIMM,CAAO,IACZC,EAAa1E,OAAOC,OAAO2C,EAAS,CACxC3E,KAAM,SACNiG,OAGF,OAAO,IAAIF,SAAQ,SAACW,EAASV,GAsC3B,EAAKd,kBAlCY,SAACM,EAAOZ,GAIvB,GAAGY,IAAU5B,EAAQmB,OAEnB,OADAiB,EAAO,IAAIjC,MAAM,yBACVH,EAAQ8B,gBAMjB,GAAGF,IAAU5B,EAAQiB,cAA8B,oBAAdD,EAAK5E,MACpC4E,EAAKqB,KAAOA,EAAI,CAEpB,GAAmB,OAAhBrB,EAAK7E,OAAiB,CACvB,IAAI4G,EAAY5E,OAAOC,OAAO4C,UACvB+B,EAAU3G,YACV2G,EAAUV,UACVU,EAAU5G,OACjB2G,EAAQC,QAGRX,EAAO,IAAIjC,MAAMa,EAAKD,UAExB,OAAOf,EAAQ8B,gBAGjB,OAAO,QAOT,EAAK5B,GAAG8C,KAAKnD,KAAKoD,UAAUJ,QAnK9B,IAAMK,EAAMzI,OAAOC,SACbyI,EAA8B,WAAjBD,EAAIE,SAAwB,OAAS,MACxDC,KAAK5C,MACH,UACO0C,EADP,aACsBD,EAAII,KAD1B,OAIFD,KAAKnD,GAAK,KACVmD,KAAKjD,eAAiB,KACtBiD,KAAK/G,UAAY,EACjB+G,KAAKzC,QAAU,EACfyC,KAAK7B,eAAiB,IAAI+B,IAC1BF,KAAKpD,WA5BID,EAIJO,WAAa,EAJTP,EAKJW,OAAS,EALLX,EAMJmB,OAAS,EANLnB,EAOJiB,aAAe,EAPXjB,EAQJoB,UAAY,EARRpB,EAUJ8B,gBAAkB,EAiLpB,IAAI0B,EAAU,IAAIxD,E,gEClJVyD,E,uKA9BX,OACE,eAACC,EAAA,EAAD,CAAQC,GAAG,OAAOC,QAAQ,OAAOC,kBAAgB,EAACC,OAAO,KAAzD,UACE,cAAC,gBAAD,CAAeC,GAAG,IAAlB,SACE,cAACL,EAAA,EAAOM,MAAR,0BAIF,cAACN,EAAA,EAAOO,OAAR,CAAeC,gBAAc,WAC7B,eAACR,EAAA,EAAOS,SAAR,CAAiB9B,GAAG,SAApB,UACE,cAAC+B,EAAA,EAAD,CAAKC,UAAU,YACf,eAACD,EAAA,EAAD,WACE,cAAC,gBAAD,CAAeL,GAAG,aAAlB,SACE,eAACK,EAAA,EAAIE,KAAL,WAAU,cAAC,IAAD,IAAV,kBAEF,cAAC,gBAAD,CAAeP,GAAG,gBAAlB,SACE,eAACK,EAAA,EAAIE,KAAL,WAAU,cAAC,IAAD,IAAV,iBAEF,cAAC,gBAAD,CAAeP,GAAG,mBAAlB,SACE,eAACK,EAAA,EAAIE,KAAL,WAAU,cAAC,IAAD,IAAV,oBAEF,cAAC,gBAAD,CAAeP,GAAG,sBAAlB,SACE,eAACK,EAAA,EAAIE,KAAL,WAAU,cAAC,IAAD,IAAV,oC,GA3BYC,a,QCApBC,E,uKAQF,OAAGnB,KAAKoB,MAAMtI,SAAWF,EACf,wBAKPoH,KAAKoB,MAAMtI,SAAWH,EAErB,qBAAKqI,UAAU,2BAAf,SACE,cAACK,EAAA,EAAD,CAAOd,QAAQ,UAAUe,QAAStB,KAAKuB,SAAvC,SACE,qBAAKP,UAAU,gBAAf,+BAWN,qBAAKA,UAAU,2BAAf,SACE,cAACK,EAAA,EAAD,CAAOd,QAAQ,UAAUxH,KAAK,SAA9B,SACE,sBAAKiI,UAAU,gBAAf,wCAEE,uCAAUhB,KAAKoB,MAAMnI,aACK,IAAzB+G,KAAKoB,MAAMnI,UAAkB,UAAY,WAH5C,WAIQ,mBAAG+H,UAAU,aAAaM,QAAS,SAAC7D,GACtCA,EAAI+D,iBACJrB,EAAQvD,WACP6E,KAAK,KAHJ,kBAJR,0B,GA/BkBP,aA6DbtE,mBAXf,SAAyBzE,EAAOuJ,GAC9B,MAAO,CACL5I,OAAQX,EAAMgI,QAAQrH,OACtBG,UAAWd,EAAMgI,QAAQlH,cAI7B,SAA4B0I,GAC1B,MAAO,KAGM/E,CAA6CuE,G,2BC9DtDS,G,uKAEF,IAAMC,EAAaC,KAAOC,KAAK/B,KAAKoB,MAAM5H,MACnCwI,GAAGhC,KAAKoB,MAAM3H,UAAUwI,OAAO,oBACtC,OACE,qBAAKjB,UAAU,2BAAf,SACE,sBAAKA,UAAU,oBAAf,UACE,qBAAKkB,IAAI,qBAAqBC,IAAI,mBAClC,sBAAKnB,UAAU,eAAf,UACE,2CAAchB,KAAKoB,MAAMzH,cAAzB,MAA2CqG,KAAKoB,MAAM9J,YACtD,gDAAmBuK,EAAnB,KAAiC7B,KAAKoB,MAAM3H,SAA5C,OACA,2CACWuG,KAAKoB,MAAM1H,OADtB,iBAC4CsG,KAAKoB,MAAM7H,SADvD,qBAEiByG,KAAKoB,MAAM9H,YAF5B,QAIA,6CACa0G,KAAKoB,MAAMxH,SADxB,eAEYoG,KAAKoB,MAAMvH,WAGvB,qBAAKmH,UAAU,eAAf,SACE,eAACoB,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,KAAK,KAA7B,UACE,gCACE,+BACE,0CACA,4CACA,wCACA,0CACA,gDAGJ,gCACE,+BACE,6BAAKvC,KAAKoB,MAAMtH,UAChB,6BAAKkG,KAAKoB,MAAMrH,iBAChB,6BAAKiG,KAAKoB,MAAMpH,aAChB,6BAAKgG,KAAKoB,MAAMnH,eAChB,6BAAK+F,KAAKoB,MAAMlH,6BAM1B,sBAAK8G,UAAU,eAAf,cACG,cAAC,OAAD,CAAMN,GAAG,SAAT,mBADH,gB,GA3CcQ,aAiETtE,oBAVf,SAAyBzE,EAAOuJ,GAC9B,OAAO,eACFvJ,EAAMW,WAIb,SAA4B6I,GAC1B,MAAO,KAGM/E,CAA6CgF,I,kBCrErD,SAASY,GAAcC,GAC5B,OAAOtC,EAAQxB,YAAY,CACzB+D,OAAQ,iBACRD,SAOG,SAASE,GAAYC,GAC1B,OAAOzC,EAAQxB,YAAY,CACzB+D,OAAQ,eACRE,gBAOG,SAASC,GAAUjI,GACxB,OAAOuF,EAAQxB,YAAY,CACzB+D,OAAQ,aACR9H,UAOG,SAASkI,GAAYC,EAASC,EAAQC,EAAUC,EAAaC,GAClE,OAAOhD,EAAQxB,YAAY,CACzB+D,OAAQ,eACRK,UACAC,SACAC,WACAC,cACAC,Y,sBCeWC,G,4MA9CbjL,MAAQ,CACNkL,SAAS,EACTpE,KAAM,I,EAMRqE,MAAQ,WACN,EAAKC,SAAS,CAAEF,SAAS,K,EAM3BG,KAAO,SAACvE,GACN,EAAKsE,SAAS,CAAEF,SAAS,EAAMpE,KAAMA,K,uDAOrC,OACE,cAACwE,GAAA,EAAD,CACED,KAAMxD,KAAK7H,MAAMkL,QACjBK,kBAAgB,gCAChBC,UAAQ,EACRpB,KAAK,KAJP,SAME,eAACkB,GAAA,EAAMG,KAAP,WACE,qBAAK5C,UAAU,wBAAf,SACGhB,KAAK7H,MAAM8G,OAEd,uBACA,qBAAK+B,UAAU,gBAAf,SACE,cAAC6C,GAAA,EAAD,CAAQtD,QAAQ,YAAYe,QAAStB,KAAKsD,MAA1C,2B,GAxCcpC,aCQpB4C,G,4MAIJ3L,MAAQ,CACNkL,SAAS,EACTN,QAAS,WACTC,OAAQ,WACRC,SAAU,MACVC,YAAa,GACbC,QAAS,OACTY,kBAAkB,EAClBC,iBAAiB,EACjBC,kBAAkB,EAClBC,gBAAgB,EAChBC,mBAAmB,EACnBC,kBAAkB,G,EAmBpBd,MAAQ,WACN,EAAKC,SAAS,CAAEF,SAAS,K,EAM3BG,KAAO,SAACT,EAASC,GACf,EAAKO,SAAS,CACZF,SAAS,EACTN,QAASA,GAAoB,WAC7BC,OAAQA,GAAkB,WAC1BC,SAAU,MACVC,YAAa,GACbC,QAAS,OACTY,mBAAkBhB,EAClBiB,iBAAiB,EACjBC,kBAAkBlB,IAAWC,EAC7BkB,gBAAgBnB,IAAWC,EAC3BmB,mBAAmB,EACnBC,kBAAkB,K,EAOtBnB,SAAW,WACTH,GACE,EAAK3K,MAAM4K,QACX,EAAK5K,MAAM6K,OACX,EAAK7K,MAAM8K,SACX,EAAK9K,MAAM+K,YACX,EAAK/K,MAAMgL,SAEV5K,OAAM,SAAAC,GACL6L,YAAW,kBAAM,EAAKC,MAAMd,KAAKhL,EAAMkF,WAAU,QAErD,EAAK4F,S,EAMPiB,gBAAkB,SAAChG,GACS,aAAvBA,EAAMiG,OAAOC,MACd,EAAKlB,SAAS,CACZS,iBAAiB,EACjBC,kBAAkB,EAClBC,gBAAgB,EAChBnB,QAASxE,EAAMiG,OAAOC,QAGxB,EAAKlB,SAAS,CACZS,iBAAiB,EACjBjB,QAASxE,EAAMiG,OAAOC,S,EAO5BC,eAAiB,SAACnG,GACU,aAAvBA,EAAMiG,OAAOC,MACd,EAAKlB,SAAS,CACZU,kBAAkB,EAClBC,gBAAgB,EAChBlB,OAAQzE,EAAMiG,OAAOC,QAGvB,EAAKlB,SAAS,CACVU,kBAAkB,EAClBC,gBAAiB3I,EAAc,EAAKpD,MAAM8K,UAC1CD,OAAQzE,EAAMiG,OAAOC,S,EAO7BE,iBAAmB,SAACpG,GAClB,IAAM4F,EAAoB5I,EAAcgD,EAAMiG,OAAOC,OACrD,EAAKlB,SAAS,CACZN,SAAU1E,EAAMiG,OAAOC,MACvBN,kBAAmBA,EACnBD,gBAAiBC,K,EAOrBS,gBAAkB,SAACrG,GACjB,IAAM6F,EAAmB9H,EAAaiC,EAAMiG,OAAOC,OACnD,EAAKlB,SAAS,CACZJ,QAAS5E,EAAMiG,OAAOC,MACtBL,iBAAkBA,EAClBF,gBAAiBE,K,kEA7GnBpE,KAAKoB,MAAMyD,kBAAkB,CAC3BrB,KAAMxD,KAAKwD,S,6CAKbxD,KAAKoB,MAAMyD,kBAAkB,Q,+BA8GrB,IAAD,OAIDC,EACJ,eAACC,GAAA,EAAKC,MAAN,CAAYC,UAAU,gBAAtB,UACE,cAACF,GAAA,EAAKG,MAAN,sBACA,eAACH,GAAA,EAAKI,QAAN,CACEC,GAAG,SACHC,YAAY,WACZC,SAAUtF,KAAK7H,MAAM4L,iBACrBwB,SAAUvF,KAAKuE,gBACfE,MAAOzE,KAAK7H,MAAM4K,QALpB,UAOE,wBAAQ0B,MAAM,WAAd,4BACCzE,KAAKoB,MAAMoE,WAAWC,KAAI,SAAA1C,GAAO,OAChC,wBAAsB0B,MAAO1B,EAA7B,SACGA,GADUA,YAWjBlJ,EAAU,GACY,aAAvBmG,KAAK7H,MAAM4K,SAA0B/C,KAAK7H,MAAM4K,WAAW/C,KAAKoB,QACjEvH,EAAUmG,KAAKoB,MAAMpB,KAAK7H,MAAM4K,SAASlJ,SAG3C,IAAM6L,EACJ,eAACX,GAAA,EAAKC,MAAN,CAAYC,UAAU,eAAtB,UACE,cAACF,GAAA,EAAKG,MAAN,qBACA,eAACH,GAAA,EAAKI,QAAN,CACEC,GAAG,SACHC,YAAY,WACZC,SAAUtF,KAAK7H,MAAM6L,gBACrBuB,SAAUvF,KAAK0E,eACfD,MAAOzE,KAAK7H,MAAM6K,OALpB,UAOE,wBAAQyB,MAAM,WAAd,2BACC5K,EAAQ4L,KAAI,SAAAzC,GAAM,OACjB,wBAAqByB,MAAOzB,EAA5B,SACGA,GADUA,YAWf2C,EAAc,kFACdC,EACJ,eAACb,GAAA,EAAKC,MAAN,CACEC,UAAU,gBADZ,UAGE,cAACF,GAAA,EAAKG,MAAN,uBACA,cAACH,GAAA,EAAKI,QAAN,CACEpM,KAAK,OACLuM,SAAUtF,KAAK7H,MAAM8L,iBACrBQ,MAAOzE,KAAK7H,MAAM8K,SAClBsC,SAAUvF,KAAK2E,iBACfkB,WAAY7F,KAAK7H,MAAMgM,kBACvB2B,QAAS9F,KAAK7H,MAAMgM,oBAGtB,eAACY,GAAA,EAAKI,QAAQY,SAAd,CAAuBhN,KAAK,QAA5B,qBACU,mBAAG0I,KAAMkE,EAAT,kBADV,2BAIA,eAACZ,GAAA,EAAKI,QAAQY,SAAd,CAAuBhN,KAAK,UAA5B,qBACU,mBAAG0I,KAAMkE,EAAT,kBADV,8BAUEK,EACJ,eAACjB,GAAA,EAAKC,MAAN,CAAYC,UAAU,mBAAtB,UACE,cAACF,GAAA,EAAKG,MAAN,qCACA,cAACH,GAAA,EAAKI,QAAN,CACEpM,KAAK,OACLuM,SAAUtF,KAAK7H,MAAM8L,iBACrBQ,MAAOzE,KAAK7H,MAAM+K,YAClBqC,SAAU,SAAChH,GAAD,OAAW,EAAKgF,SAAS,CAACL,YAAa3E,EAAMiG,OAAOC,cAQ9DwB,EACJ,eAAClB,GAAA,EAAKC,MAAN,CAAYC,UAAU,eAAtB,UACE,cAACF,GAAA,EAAKG,MAAN,iCACA,cAACH,GAAA,EAAKI,QAAN,CACEC,GAAG,WACHc,KAAM,EACNZ,SAAUtF,KAAK7H,MAAM8L,iBACrBQ,MAAOzE,KAAK7H,MAAMgL,QAClBoC,SAAUvF,KAAK4E,gBACfiB,WAAY7F,KAAK7H,MAAMiM,iBACvB0B,QAAS9F,KAAK7H,MAAMiM,mBAEtB,cAACW,GAAA,EAAKI,QAAQY,SAAd,CAAuBhN,KAAK,QAA5B,sDAIA,cAACgM,GAAA,EAAKI,QAAQY,SAAd,CAAuBhN,KAAK,UAA5B,yDASJ,OACE,gCACE,cAAC,GAAD,CAAaoN,IAAK,SAACC,GAAS,EAAK9B,MAAQ8B,KACzC,eAAC3C,GAAA,EAAD,CACED,KAAMxD,KAAK7H,MAAMkL,QACjBK,kBAAgB,gCAChBC,UAAQ,EAHV,UAKE,cAACF,GAAA,EAAMG,KAAP,UACE,sBAAK5C,UAAU,sBAAf,UACG8D,EACAY,EACAE,EACAI,EACAC,OAGL,eAACxC,GAAA,EAAM4C,OAAP,WACE,cAACxC,GAAA,EAAD,CAAQtD,QAAQ,YAAYe,QAAStB,KAAKsD,MAA1C,oBAGA,cAACO,GAAA,EAAD,CACEtD,QAAQ,UACRe,QAAStB,KAAKiD,SACdqC,SAAUtF,KAAK7H,MAAM+L,eAHvB,mC,GA5RiBhD,aAyTdtE,oBAXf,SAAyBzE,EAAOuJ,GAC9B,OAAO,aACL8D,WAAY1K,OAAOwL,KAAKnO,EAAMyB,UAAU2M,QACrCpO,EAAMyB,aAIb,SAA4B+H,GAC1B,MAAO,KAGM/E,CAA6CkH,ICpO7C0C,G,4MAzFbrO,MAAQ,CACNkL,SAAS,EACTpE,KAAM,I,EAMRwH,GAAK,WACH,EAAKlD,SAAS,CAAEF,SAAS,IACrB,EAAKlL,MAAMsO,IAAM,EAAKtO,MAAMsO,GAAGC,IACjC,EAAKvO,MAAMsO,GAAGC,M,EAOlBC,IAAM,WACA,EAAKxO,MAAMwO,KAAO,EAAKxO,MAAMwO,IAAID,IACnC,EAAKvO,MAAMwO,IAAID,KAEjB,EAAKnD,SAAS,CAAEF,SAAS,K,EAM3BG,KAAO,SAACvE,EAAM0H,EAAKF,GACjB,EAAKlD,SAAS,CACZF,SAAS,EACTpE,OACA0H,MACAF,Q,uDAQF,IAAIG,EAAY,YACZC,EAAa,UACbC,EAAS,SACTC,EAAU,KAYd,OAVI/G,KAAK7H,MAAMsO,KACTzG,KAAK7H,MAAMsO,GAAGlG,UAASqG,EAAY5G,KAAK7H,MAAMsO,GAAGlG,SACjDP,KAAK7H,MAAMsO,GAAGxH,OAAM6H,EAAS9G,KAAK7H,MAAMsO,GAAGxH,OAG7Ce,KAAK7H,MAAMwO,MACT3G,KAAK7H,MAAMwO,IAAIpG,UAASsG,EAAa7G,KAAK7H,MAAMwO,IAAIpG,SACpDP,KAAK7H,MAAMwO,IAAI1H,OAAM8H,EAAU/G,KAAK7H,MAAMwO,IAAI1H,OAIlD,8BACE,eAACwE,GAAA,EAAD,CACED,KAAMxD,KAAK7H,MAAMkL,QACjBK,kBAAgB,gCAChBC,UAAQ,EACRpB,KAAK,KAJP,UAME,cAACkB,GAAA,EAAMG,KAAP,UACE,qBAAK5C,UAAU,wBAAf,SACGhB,KAAK7H,MAAM8G,SAGhB,eAACwE,GAAA,EAAM4C,OAAP,WACE,cAACxC,GAAA,EAAD,CACEtD,QAASqG,EACTtF,QAAStB,KAAKyG,GAFhB,SAIGK,IAEH,cAACjD,GAAA,EAAD,CACEtD,QAASsG,EACTvF,QAAStB,KAAK2G,IAFhB,SAIGI,gB,GApFW7F,aCUpB8F,G,4MAWJC,iBAAmB,WACjB,IAAMlE,EAAU,EAAK3B,MAQfuF,EAAM,CACVpG,QAAS,SACTtB,KAAM,SACNyH,GAVoB,WACpBlE,GAAcO,EAAQN,MACnBlK,OAAM,SAACC,GACN6L,YAAW,kBAAM,EAAK6C,YAAY1D,KAAKhL,EAAMkF,WAAU,UAUvDyJ,EAAG,mDAA+CpE,EAAQN,KAAvD,MACT,EAAK2E,aAAa5D,KAAK2D,EAAKR,I,uDAMpB,IAAD,OACD5D,EAAU/C,KAAKoB,MACrB,OACE,sBAAKJ,UAAU,oBAAf,UACE,cAAC,GAAD,CAAamF,IAAK,SAACC,GAAS,EAAKgB,aAAehB,KAChD,cAAC,GAAD,CAAaD,IAAK,SAACC,GAAS,EAAKc,YAAcd,KAC/C,cAAC,GAAD,CACEvB,kBAAmB,SAAAwC,GAAG,OAAI,EAAKC,kBAAoBD,KAErD,eAACE,GAAA,EAAD,WACE,cAACA,GAAA,EAAKC,OAAN,UACE,sBAAKxG,UAAU,YAAf,UACE,qBAAKA,UAAU,aAAf,SACE,eAAC6C,GAAA,EAAD,CACEtB,KAAK,KACLhC,QAAQ,YACR+E,UAAWtF,KAAKoB,MAAMqG,UACtBnG,QAAStB,KAAKiH,iBAJhB,UAME,cAAC,IAAD,IANF,eASF,iCAASlE,EAAQN,YAGrB,cAAC8E,GAAA,EAAK3D,KAAN,UACE,qBAAK5C,UAAU,cAAf,SACG+B,EAAQlJ,QAAQ4L,KAAI,SAAAzC,GAAM,OACzB,eAACa,GAAA,EAAD,CACEtB,KAAK,KACLhC,QAAQ,oBACR+E,UAAW,EAAKlE,MAAMqG,UAEtBnG,QAAS,WACP,EAAKgG,kBAAkB9D,KAAKT,EAAQN,KAAMO,IAN9C,UASE,cAAC,IAAD,IATF,IAScA,IALPA,oB,GAjEO9B,aA+FftE,oBAXf,SAAyBzE,EAAOuJ,GAC9B,OAAO,2BACFvJ,EAAMyB,SAAS8H,EAASgG,cAD7B,IAEED,UAAWtP,EAAMgI,QAAQrH,SAAWF,OAIxC,SAA4B+I,GAC1B,MAAO,KAGM/E,CAA6CoK,ICJ7CW,G,4MA7FbxP,MAAQ,CACNkL,SAAS,EACTuE,aAAa,G,EAMftE,MAAQ,WACN,EAAKC,SAAS,CAAEF,SAAS,K,EAM3BG,KAAO,WACL,EAAKD,SAAS,CAAEF,SAAS,K,EAM3B3E,KAAO,WACL,IAAI,EAAKmJ,eAGP,OAFAxD,YAAW,kBAAM,EAAKC,MAAMd,KAAK,uBAAsB,UACvD,EAAKF,QAIP,EAAKuE,eACFhQ,MAAK,SAAAiQ,GAAM,OAAInF,GAAYmF,MAC3BjQ,MAAK,WAAQ,EAAKgQ,eAAiB,QACnCtP,OAAM,SAAAC,GACL6L,YAAW,kBAAM,EAAKC,MAAMd,KAAKhL,EAAMkF,WAAU,QAErD,EAAK4F,S,EAMPyE,mBAAqB,SAACxJ,GACpB,IAAMyJ,EAAQzJ,EAAMiG,OAAOwD,MACvBA,EAAMrM,SAGV,EAAK4H,SAAS,CAAEqE,aAAa,IAE7B,EAAKC,eAAiB,IAAI/I,SAAQ,SAACW,EAASV,GAC1C,IAAMkJ,EAAS,IAAIC,WACnBD,EAAOE,mBAAmBH,EAAM,IAChCC,EAAOG,OAAS,kBAAM3I,EAAQ4I,KAAKJ,EAAOH,UAC1CG,EAAOK,QAAU,SAAA9P,GAAK,OAAIuG,EAAOvG,S,uDAO3B,IAAD,OACP,OACE,gCACE,cAAC,GAAD,CAAa2N,IAAK,SAACC,GAAS,EAAK9B,MAAQ8B,KACzC,eAAC3C,GAAA,EAAD,CACED,KAAMxD,KAAK7H,MAAMkL,QACjBK,kBAAgB,gCAChBC,UAAQ,EAHV,UAKE,cAACF,GAAA,EAAMG,KAAP,UACE,sBAAK5C,UAAU,wBAAf,UACE,8DACA,uBAAOjI,KAAK,OAAOiG,GAAG,aAAauJ,OAAO,OACnChD,SAAUvF,KAAK+H,0BAG1B,eAACtE,GAAA,EAAM4C,OAAP,WACE,cAACxC,GAAA,EAAD,CAAQtD,QAAQ,YAAYe,QAAStB,KAAKsD,MAA1C,oBAGA,cAACO,GAAA,EAAD,CACEtD,QAAQ,UACRe,QAAStB,KAAKtB,KACd4G,UAAWtF,KAAK7H,MAAMyP,YAHxB,+B,GAnFoB1G,aCG1BsH,G,uKAIM,IAAD,OACDC,EAAezI,KAAKoB,MAAMxH,SAE5B8O,EACF,cAACnB,GAAA,EAAD,UACE,qBAAKvG,UAAU,aAAf,4BAeJ,OAXGyH,EAAa9M,SACd+M,EACE,8BACGD,EAAahD,KAAI,SAAA1C,GAAO,OACvB,cAAC,GAAD,CAEE2E,YAAa3E,GADRA,SAOb,sBAAK/B,UAAU,2BAAf,UACE,cAAC,GAAD,CAAmBmF,IAAK,SAACC,GAAS,EAAKuC,OAASvC,KAChD,0CACA,qBAAKpF,UAAU,2BAAf,SACE,eAAC6C,GAAA,EAAD,CACEtD,QAAQ,oBACRgC,KAAK,KACL+C,UAAWtF,KAAKoB,MAAMqG,UACtBnG,QAAS,kBAAM,EAAKqH,OAAOnF,QAJ7B,UAME,cAAC,IAAD,IANF,qBASDkF,S,GAtCiBxH,aA0DXtE,oBAXf,SAAyBzE,EAAOuJ,GAC9B,MAAO,CACL9H,SAAUkB,OAAOwL,KAAKnO,EAAMyB,UAAU2M,OACtCkB,UAAWtP,EAAMgI,QAAQrH,SAAWF,MAIxC,SAA4B+I,GAC1B,MAAO,KAGM/E,CAA6C4L,I,uFCjDtDI,GAAgB,SAAC9P,GACrB,OAAOA,GACP,IAAK,YAAa,MAAO,UACzB,IAAK,UAAW,MAAO,UACvB,IAAK,UAAW,MAAO,UACvB,IAAK,WAAY,MAAO,UACxB,IAAK,aAAc,MAAO,UAC1B,IAAK,SAAU,MAAO,SACtB,QAAS,MAAO,YAOlB,SAAS8H,GAAT,GAAyC,IAAvB3B,EAAsB,EAAtBA,KAAM4J,EAAgB,EAAhBA,SAAUnC,EAAM,EAANA,GAC1BpF,EAAUwH,aACdD,GACA,SAACtK,GACKmI,GACFA,IAEFnI,EAAMiD,oBAEV,OACE,mBAAGC,KAAK,MAAMH,QAASA,EAAvB,SACGrC,IAQP,IAAM8J,GAAY,SAACC,EAAOC,GACxB,IAAMpJ,EAAMzI,OAAOC,SACb6R,EACF,UACOrJ,EAAIE,SADX,aACwBF,EAAII,MAE1BkJ,EAAUF,EAAU,MAAQ,MAClC,MAAM,GAAN,OAAUC,EAAV,yBAAkCF,EAAlC,YAA2CG,IAMvCC,G,4MAYJC,iBAAmB,WACjB,IAAMC,EAAM,EAAKlI,MAQXuF,EAAM,CACVpG,QAAS,SACTtB,KAAM,MACNyH,GAVgB,WAChB7D,GAAUyG,EAAIC,YACXhR,OAAM,SAACC,GACN6L,YAAW,kBAAM,EAAK6C,YAAY1D,KAAKhL,EAAMkF,WAAU,UAc7D,EAAK8L,aAAahG,KADT,2CACmBmD,EALjB,CACT1H,KAAM,Q,uDAUA,IAAD,OACDqK,EAAMtJ,KAAKoB,MACXqI,EAAY3H,KAAOC,KAAKuH,EAAIG,WAC5BC,EAAWD,EAAUzH,GAAGhC,KAAKoB,MAAM3H,UAClCwI,OAAO,uBAKV0H,EACF,qBAAK3I,UAAU,oBAAf,SACE,eAAC6C,GAAA,EAAD,CACEtD,QAAQ,oBACRgC,KAAK,KACL+C,UAAWtF,KAAKoB,MAAMqG,UACtBnG,QAAStB,KAAKqJ,iBAJhB,UAME,cAAC,IAAD,IANF,eAcAO,EAAc,KACdC,EAAY,KACZC,EAAe,cAAUR,EAAIC,YAC7BQ,EAAc,KACdC,EAAY,KACZC,EAAe,cAAUX,EAAIC,YAEjCM,EACE,cAACjJ,GAAD,CAAQiI,SAAUiB,EAAiB7K,KAAK,YAG1C+K,EACE,cAACpJ,GAAD,CAAQiI,SAAUoB,EAAiBhL,KAAK,YAG1C2K,EACI,cAACM,GAAA,EAAUpJ,SAAX,CAAoB+H,SAAUiB,EAA9B,SACE,gCACE,qBAAK9I,UAAU,mBAAf,qBACA,qBAAKmJ,MAAO,CAAEC,OAAQ,KAAtB,SACE,cAAC,WAAD,CACEC,IAAKtB,GAAUO,EAAIC,YAAY,GAC/Be,QAAM,EACNC,QAAM,EACNC,WAAY,EACZC,cAAY,EACZC,iBAAe,EACfC,iBAAe,WAO3BZ,EACI,cAACG,GAAA,EAAUpJ,SAAX,CAAoB+H,SAAUoB,EAA9B,SACE,gCACE,qBAAKjJ,UAAU,mBAAf,qBACA,qBAAKmJ,MAAO,CAAEC,OAAQ,KAAtB,SACE,cAAC,WAAD,CACEC,IAAKtB,GAAUO,EAAIC,YAAY,GAC/Be,QAAM,EACNC,QAAM,EACNC,WAAY,EACZC,cAAY,EACZC,iBAAe,EACfC,iBAAe,WAOD,cAAvB3K,KAAKoB,MAAMwJ,UACZjB,EAAe,KAEVL,EAAIuB,SACPhB,EAAY,KACZD,EAAc,MAGXN,EAAIwB,SACPd,EAAY,KACZD,EAAc,OAIQ,WAAvB/J,KAAKoB,MAAMwJ,SAAuC,YAAftB,EAAIxQ,SACxC+Q,EAAY,KACZD,EAAc,KACdI,EAAY,KACZD,EAAc,MAMhB,IAAIgB,EAAkB,KAClBC,EAAgB,KAChBC,EAAmB,kBAAc3B,EAAIC,YACrCpG,EAAU3G,KAAKoD,UAAUpD,KAAKC,MAAM6M,EAAInG,SAAU,KAAM,GACtD+H,EAAcC,KAAKC,UAAU,OAAQjI,GAASsB,MAEpC,OAAZtB,IACF6H,EACE,cAACpK,GAAD,CAAQiI,SAAUoC,EAAqBhM,KAAK,YAG9C8L,EACE,cAACb,GAAA,EAAUpJ,SAAX,CAAoB+H,SAAUoC,EAA9B,SACE,gCACE,qBAAKjK,UAAU,mBAAf,qBACA,qBAAKA,UAAU,OAAf,SACE,sBAAMqK,wBAAyB,CAACC,OAAQJ,aAOlD,IAAMK,EACJ,sBAAKvK,UAAU,aAAawK,MAAO9B,EAAnC,UACGG,EACAA,IAAcG,GAAagB,GAAiB,MAAQ,GACpDhB,EACAA,GAAagB,EAAgB,MAAQ,GACrCA,EACArB,KAODzG,EAAc,GAKlB,MAJwB,KAApBoG,EAAIpG,cACNA,EAAW,WAAOoG,EAAIpG,YAAX,MAIX,eAACuI,GAAA,EAAUC,KAAX,WACE,cAAC,GAAD,CAAavF,IAAK,SAACC,GAAS,EAAKoD,aAAepD,KAChD,cAAC,GAAD,CAAaD,IAAK,SAACC,GAAS,EAAKc,YAAcd,KAC/C,eAAC8D,GAAA,EAAD,WACA,sBAAKlJ,UAAU,uBAAf,UACE,sBAAKA,UAAU,YAAf,UACE,qBAAKA,UAAU,aAAawK,MAAO9B,EAAnC,SACGD,EAAUkC,YAEb,cAACC,GAAA,EAAD,CAAOrL,QAASqI,GAAcU,EAAIxQ,QAAlC,SACGwQ,EAAIxQ,SAEP,uCAAUwQ,EAAItG,OAAd,IAAuBE,KAPzB,KAOiDoG,EAAIvG,QAPrD,OASA,sBAAK/B,UAAU,sBAAf,UACGuK,EADH,gBAEgBtQ,EAAgBqO,EAAIuC,OAFpC,WAEoDvC,EAAIrG,SAFxD,UAKD8H,EACAnB,EACAG,Y,GA3MiB7I,aAiOXtE,oBAZf,SAAyBzE,EAAOuJ,GAC9B,OAAO,2BACFvJ,EAAM2T,KAAKpK,EAASkJ,SAASlJ,EAAS9G,QAD3C,IAEEnB,SAAUtB,EAAMW,OAAOW,SACvBgO,UAAWtP,EAAMgI,QAAQrH,SAAWF,OAIxC,SAA4B+I,GAC1B,MAAO,KAGM/E,CAA6CwM,ICtRtD2C,G,uKAIM,IAAD,OACDC,EAAShM,KAAKoB,MAAM0K,KACpBhT,EAASkH,KAAKoB,MAAM7J,MAAM0U,OAAOnT,OAKnC4P,EACF,cAACnB,GAAA,EAAD,UACE,qBAAKvG,UAAU,aAAf,wBAIDgL,EAAOrQ,SACR+M,EACE,cAAC+C,GAAA,EAAD,UACGO,EAAOvG,KAAI,SAAA7K,GAAK,OACf,cAAC,GAAD,CAEEA,MAAOA,EACPgQ,QAAS9R,EAAOsC,eAFXR,SAYf,IAAIsR,EACF,qBAAKlL,UAAU,2BAAf,SACE,eAAC6C,GAAA,EAAD,CACEtD,QAAQ,oBACRgC,KAAK,KACL+C,UAAWtF,KAAKoB,MAAMqG,UACtBnG,QAAS,kBAAM,EAAKgG,kBAAkB9D,QAJxC,UAME,cAAC,IAAD,IANF,uBAiBJ,MANc,cAAX1K,IACDoT,EAAiB,MAMjB,sBAAKlL,UAAU,2BAAf,UACE,cAAC,GAAD,CACE6D,kBAAmB,SAAAwC,GAAG,OAAI,EAAKC,kBAAoBD,KAErD,+BAAKpM,EAAgBnC,GAArB,WACCoT,EACD,qBAAKlL,UAAU,oBAAf,SACG0H,W,GA7DWxH,aA0FPtE,oBAnBf,SAAyBzE,EAAOuJ,GAC9B,IAAMyK,EAAYzK,EAASnK,MAAM0U,OAAOnT,OAAOsC,cAC3C0Q,EAAO,GAOX,OANGK,KAAahU,EAAM2T,OACpBA,EAAOhR,OAAOwL,KAAKnO,EAAM2T,KAAKK,IAC3B1G,KAAI,SAAA2G,GAAG,OAAIjU,EAAM2T,KAAKK,GAAWC,MACjC7F,KAAK8F,KAAO,eACZ5G,KAAI,SAAAlJ,GAAG,OAAIA,EAAIgN,eAEb,CACLuC,OACArE,UAAWtP,EAAMgI,QAAQrH,SAAWF,MAIxC,SAA4B+I,GAC1B,MAAO,KAGM/E,CAA6CmP,ICiH7CO,G,uKAtCX,OACE,qBAAKtL,UAAU,2BAAf,SACE,sBAAKA,UAAU,oBAAf,UACE,sBAAKA,UAAU,eAAf,UACE,gFACA,wFAEF,qBAAKA,UAAU,eAAf,SACE,qHAEF,qBAAKA,UAAU,eAAf,SACE,qBAAKA,UAAU,eAAf,SACE,eAACoB,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,KAAK,KAA7B,UACE,gCACE,+BACE,sCACA,8CAGJ,gCAjMC,CACX,CACEE,KAAM,SACN8J,QAAS,0BACTC,QAAS,QAGX,CACE/J,KAAM,SACN8J,QAAS,sBACTC,QAAS,OAEX,CACE/J,KAAM,UACN8J,QAAS,kCACTC,QAAS,OAEX,CACE/J,KAAM,YACN8J,QAAS,yBACTC,QAAS,cAEX,CACE/J,KAAM,SACN8J,QAAS,sCACTC,QAAS,OAEX,CACE/J,KAAM,kBACN8J,QAAS,mCACTC,QAAS,OAEX,CACE/J,KAAM,WACN8J,QAAS,qCACTC,QAAS,OAEX,CACE/J,KAAM,MACN8J,QAAS,8BACTC,QAAS,OAEX,CACE/J,KAAM,WACN8J,QAAS,6CACTC,QAAS,OAEX,CACE/J,KAAM,WACN8J,QAAS,8BACTC,QAAS,cAEX,CACE/J,KAAM,WACN8J,QAAS,8BACTC,QAAS,OAEX,CACE/J,KAAM,UACN8J,QAAS,qCACTC,QAAS,OAEX,CACE/J,KAAM,YACN8J,QAAS,4BACTC,QAAS,OAEX,CACE/J,KAAM,eACN8J,QAAS,2BACTC,QAAS,OAEX,CACE/J,KAAM,kBACN8J,QAAS,gCACTC,QAAS,OAEX,CACE/J,KAAM,aACN8J,QAAS,oCACTC,QAAS,OAEX,CACE/J,KAAM,QACN8J,QAAS,oCACTC,QAAS,OAEX,CACE/J,KAAM,YACN8J,QAAS,oCACTC,QAAS,OAEX,CACE/J,KAAM,cACN8J,QAAS,oDACTC,QAAS,OAEX,CACE/J,KAAM,eACN8J,QAAS,2BACTC,QAAS,aAEX,CACE/J,KAAM,gBACN8J,QAAS,iEACTC,QAAS,WAEX,CACE/J,KAAM,QACN8J,QAAS,uBACTC,QAAS,OAEX,CACE/J,KAAM,cACN8J,QAAS,yCACTC,QAAS,OAEX,CACE/J,KAAM,mBACN8J,QAAS,uDACTC,QAAS,OAEX,CACE/J,KAAM,wBACN8J,QAAS,4DACTC,QAAS,cAEX,CACE/J,KAAM,gBACN8J,QAAS,sDACTC,QAAS,OAEX,CACE/J,KAAM,UACN8J,QAAS,4CACTC,QAAS,OAEX,CACE/J,KAAM,UACN8J,QAAS,yBACTC,QAAS,OAEX,CACE/J,KAAM,WACN8J,QAAS,mCACTC,QAAS,YAEX,CACE/J,KAAM,WACN8J,QAAS,uBACTC,QAAS,OAEX,CACE/J,KAAM,SACN8J,QAAS,qCACTC,QAAS,OAEX,CACE/J,KAAM,aACN8J,QAAS,2CACTC,QAAS,OAEX,CACE/J,KAAM,gBACN8J,QAAS,yCACTC,QAAS,OAEX,CACE/J,KAAM,SACN8J,QAAS,yBACTC,QAAS,QAyBQ/G,KAAI,SAAAgH,GAAG,OACV,+BACE,6BAAI,mBAAGhL,KAAMgL,EAAIF,QAAb,SAAuBE,EAAIhK,SAC/B,6BAAKgK,EAAID,YAFFC,EAAIhK,2B,GAtMfvB,aCHL,SAASwL,GAAWtL,GACjC,OACE,qBAAKJ,UAAU,2BAAf,SACE,sBAAKmJ,MAAO,CAACwC,UAAW,UAAxB,UACE,qBAAKxC,MAAO,CAACyC,OAAQ,OAArB,SACE,cAAC,IAAD,CAAcrK,KAAM,IAAKsK,MAAM,cAEjC,2E,ICsBOC,G,uKAnBX,OACE,gCACE,cAAC,EAAD,IACA,sBAAK9L,UAAU,UAAf,UACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAO+L,OAAK,EAACC,KAAK,IAAIC,UAAWrL,KACjC,cAAC,IAAD,CAAOmL,OAAK,EAACC,KAAK,aAAaC,UAAWrL,KAC1C,cAAC,IAAD,CAAOmL,OAAK,EAACC,KAAK,gBAAgBC,UAAWzE,KAC7C,cAAC,IAAD,CAAOwE,KAAK,oBAAoBC,UAAWlB,KAC3C,cAAC,IAAD,CAAOgB,OAAK,EAACC,KAAK,SAASC,UAAWX,KACtC,cAAC,IAAD,CAAOW,UAAWP,kB,GAbJxL,aCgBbgM,GAAQC,YACnBC,YAAgB,CACdjN,QxBpBG,WAAuD,IAA/BhI,EAA8B,uDAAtBa,EAAc0J,EAAQ,uCAC3D,OAAOA,EAAO3J,MAEd,KAAKN,EACH,OAAO,2BACFN,GADL,IAEEW,OAAQ4J,EAAO5J,SAGnB,KAAKJ,EACH,OAAO,2BACFP,GADL,IAEEc,UAAWyJ,EAAOzJ,YAGtB,QACE,OAAOd,IwBKPW,OtBTG,WAAqD,IAA9BX,EAA6B,uDAArBkB,EAAaqJ,EAAQ,uCACzD,OAAOA,EAAO3J,MAEd,KAAKG,EACH,OAAO,2BACFf,GADL,IAEEmB,YAAaoJ,EAAOpJ,YACpBC,SAAUmJ,EAAOnJ,SACjBC,KAAMkJ,EAAOlJ,KACbC,SAAUiJ,EAAOjJ,SACjBnC,SAAUoL,EAAOpL,SACjBoC,OAAQgJ,EAAOhJ,OACfC,cAAe+I,EAAO/I,gBAG1B,KAAKR,EACH,OAAO,2BACFhB,GADL,IAEEyB,SAAU8I,EAAO9I,SACjBC,QAAS6I,EAAO7I,UAGpB,KAAKT,EACH,OAAO,2BACFjB,GADL,IAEE2B,QAAS4I,EAAO5I,QAChBC,eAAgB2I,EAAO3I,eACvBC,WAAY0I,EAAO1I,WACnBC,aAAcyI,EAAOzI,aACrBC,cAAewI,EAAOxI,gBAG1B,QACE,OAAO/B,IsBvBPyB,SpBzBG,WAAyD,IAAhCzB,EAA+B,uDAAvBmC,EAAeoI,EAAQ,uCAC7D,OAAOA,EAAO3J,MAEd,KAAKoB,EACH,OAAO,2BACFhC,GADL,IAEE,CAACuK,EAAOD,MAAO,CACbA,KAAMC,EAAOD,KACb5I,QAAS6I,EAAO7I,WAItB,KAAKO,EACH,IAAIS,EAAWC,OAAOC,OAAO5C,GAE7B,cADO0C,EAAS6H,EAAOD,MAChB5H,EAET,KAAKR,EACH,OAAOqI,EAAO9I,SAASyT,QAAO,SAACC,EAAKC,GAElC,OADAD,EAAIC,EAAQ9K,MAAQ8K,EACbD,IACN,IAEL,QACE,OAAOnV,IoBEP2T,KlBbG,WAAiD,IAA5B3T,EAA2B,uDAAnBuC,EAAWgI,EAAQ,uCACrD,OAAOA,EAAO3J,MAEd,KAAKwB,EACH,IAAIuR,EAAQpJ,EAAOoJ,KAAKuB,QAAO,SAACC,EAAKC,GAEnC,OADAD,EAAIC,EAAQhE,YAAcgE,EACnBD,IACN,IACH,OAAO,2BACFnV,GADL,IAEE,CAACuK,EAAO5J,QAASgT,IAGrB,KAAKrR,EACH,OAAOE,EAAUxC,EAAOuK,EAAO9H,OAEjC,KAAKJ,EACH,IAAIK,EAAWF,EAAUxC,EAAOuK,EAAO4G,IAAIC,YACvCiE,EAAWxS,EAAiB0H,EAAO4G,IAAIxQ,QAE3C,OADA+B,EAAS2S,GAAU9K,EAAO4G,IAAIC,YAAc7G,EAAO4G,IAC5CzO,EAET,QACE,OAAO1C,MkBRTf,OAAOqW,8BAAgCrW,OAAOqW,gCAiBhDtN,EAAQlC,kBAXkB,SAACM,EAAOZ,GAC7BY,IAAU5B,EAAQO,WACnBgQ,GAAMvL,SAAS9I,EAAiBF,IAC1B4F,IAAU5B,EAAQW,OACxB4P,GAAMvL,SAAS9I,EAAiBD,IAC1B2F,IAAU5B,EAAQmB,OACxBoP,GAAMvL,SAAS9I,EzBzCW,mByB0CpB0F,IAAU5B,EAAQoB,WACxBmP,GAAMvL,SzBlCD,CACL5I,KAAML,EACNO,UyBgCmC0E,OAIvCwC,EAAQlC,kBCvCyB,SAACM,EAAOZ,GpBMlC,IAAmB/C,EAPA0O,EARCxQ,EAAQgT,EFAPrJ,EAAM5I,EAeHD,EsBL7B,GAAG2E,IAAU5B,EAAQiB,aAGrB,OAAOD,EAAK5E,MACZ,IAAK,gBACHmU,GAAMvL,SxBfH,SAAyB7I,GAAS,IAErCQ,EACER,EADFQ,YAAaC,EACXT,EADWS,SAAUC,EACrBV,EADqBU,KAAMC,EAC3BX,EAD2BW,SAAUnC,EACrCwB,EADqCxB,SAAUoC,EAC/CZ,EAD+CY,OAAQC,EACvDb,EADuDa,cAE3D,MAAO,CACLZ,KAAMG,EACNI,cACAC,WACAC,OACAC,WACAnC,WACAoC,SACAC,iBwBGe+T,CAAgB/P,IAC/B,MACF,IAAK,kBACHuP,GAAMvL,SxBFH,SAA2B7I,GAAS,IACjCc,EAAsBd,EAAtBc,SAAUC,EAAYf,EAAZe,QAClB,MAAO,CACLd,KAAMI,EACNS,WACAC,WwBHe8T,CAAkBhQ,IACjC,MACF,IAAK,cACHuP,GAAMvL,SxBIH,SAAuB7I,GAAS,IAEnCgB,EACEhB,EADFgB,QAASC,EACPjB,EADOiB,eAAgBC,EACvBlB,EADuBkB,WAAYC,EACnCnB,EADmCmB,aAAcC,EACjDpB,EADiDoB,cAErD,MAAO,CACLnB,KAAMK,EACNU,UACAC,iBACAC,aACAC,eACAC,iBwBde0T,CAAcjQ,IAC7B,MACF,IAAK,eACHuP,GAAMvL,UtBTqB/H,EsBSG+D,EAAK/D,StBR9B,CACLb,KAAMsB,EACNT,csBOA,MACF,IAAK,eACHsT,GAAMvL,UtB3BkBc,EsB2BG9E,EAAK8E,KtB3BF5I,EsB2BQ8D,EAAK9D,QtB1BtC,CACLd,KAAMoB,EACNsI,OACA5I,asBwBA,MACF,IAAK,iBACHqT,GAAMvL,StBtBH,SAAuBc,GAC5B,MAAO,CACL1J,KAAMqB,EACNqI,QsBmBeD,CAAc7E,EAAK8E,OAClC,MACF,IAAK,WACHyK,GAAMvL,UpBjCiB7I,EoBiCG6E,EAAK7E,OpBjCAgT,EoBiCQnO,EAAKmO,KpBhCvC,CACL/S,KAAMwB,EACNzB,SACAgT,UoB8BA,MACF,IAAK,aACHoB,GAAMvL,UpB5BgB2H,EoB4BG3L,EAAK2L,IpB3BzB,CACLvQ,KAAMyB,EACN8O,SoB0BA,MACF,IAAK,aACH4D,GAAMvL,UpBxBgB/G,EoBwBG+C,EAAK/C,MpBvBzB,CACL7B,KAAM0B,EACNG,emBmCJiT,IAASC,OACP,cAAC,IAAD,CAAUZ,MAAOA,GAAjB,SACE,cAAC,gBAAD,UACE,cAAC,GAAD,QAGJa,SAASC,eAAe,S1BlDX,WACb,GAA6C,kBAAmBtW,UAAW,CAGzE,GADkB,IAAIuW,IAAIC,GAAwB9W,OAAOC,UAC3C8W,SAAW/W,OAAOC,SAAS8W,OAIvC,OAGF/W,OAAO6G,iBAAiB,QAAQ,WAC9B,IAAMxG,EAAK,UAAMyW,GAAN,sBAEPhX,IAiDV,SAAiCO,GAE/B2W,MAAM3W,GACHI,MAAK,SAAAwW,GAGkB,MAApBA,EAASvV,SACuD,IAAhEuV,EAASC,QAAQC,IAAI,gBAAgBpS,QAAQ,cAG7CzE,UAAUC,cAAc6W,MAAM3W,MAAK,SAAAC,GACjCA,EAAa2W,aAAa5W,MAAK,WAC7BT,OAAOC,SAASqX,eAKpBlX,EAAgBC,MAGnBc,OAAM,WACLF,QAAQC,IACN,oEArEAqW,CAAwBlX,GAIxBC,UAAUC,cAAc6W,MAAM3W,MAAK,WACjCQ,QAAQC,IACN,gHAMJd,EAAgBC,O0BwBxBmX,K","file":"static/js/main.05437ca2.chunk.js","sourcesContent":["// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","//------------------------------------------------------------------------------\n// Author: Lukasz Janyst <lukasz@jany.st>\n// Date: 06.02.2018\n//\n// Licensed under the 3-Clause BSD License, see the LICENSE file for details.\n//------------------------------------------------------------------------------\n\nexport const BACKEND_STATUS_SET = 'BACKEND_STATUS_SET';\nexport const BACKEND_COUNTDOWN_SET = 'BACKEND_COUNTDOWN_SET';\n\nexport const BACKEND_CONNECTING = 'BACKEND_CONNECTING';\nexport const BACKEND_OPENED = 'BACKEND_OPENED';\nexport const BACKEND_CLOSED = 'BACKEND_CLOSED';\n\nexport function backendStatusSet(status) {\n  return {\n    type: BACKEND_STATUS_SET,\n    status\n  };\n}\nexport function backendCountdownSet(countdown) {\n  return {\n    type: BACKEND_COUNTDOWN_SET,\n    countdown\n  };\n}\n","//------------------------------------------------------------------------------\n// Author: Lukasz Janyst <lukasz@jany.st>\n// Date: 06.02.2018\n//\n// Licensed under the 3-Clause BSD License, see the LICENSE file for details.\n//------------------------------------------------------------------------------\n\nimport {\n  BACKEND_STATUS_SET, BACKEND_COUNTDOWN_SET, BACKEND_CONNECTING\n} from '../actions/backend';\n\nconst backendState = {\n  status: BACKEND_CONNECTING,\n  countdown: 0\n};\n\nexport function backendReducer(state = backendState, action) {\n  switch(action.type) {\n\n  case BACKEND_STATUS_SET:\n    return {\n      ...state,\n      status: action.status\n    };\n\n  case BACKEND_COUNTDOWN_SET:\n    return {\n      ...state,\n      countdown: action.countdown\n    };\n\n  default:\n    return state;\n  }\n}\n","//------------------------------------------------------------------------------\n// Author: Lukasz Janyst <lukasz@jany.st>\n// Date: 09.02.2018\n//\n// Licensed under the 3-Clause BSD License, see the LICENSE file for details.\n//------------------------------------------------------------------------------\n\nexport const DAEMON_STATUS_SET = 'DAEMON_STATUS_SET';\nexport const PROJECTS_STATUS_SET = 'PROJECTS_STATUS_SET';\nexport const JOBS_STATUS_SET = 'JOBS_STATUS_SET';\n\nexport function daemonStatusSet(status) {\n  const {\n    memoryUsage, cpuUsage, time, timezone, hostname, uptime, daemonVersion\n  } = status;\n  return {\n    type: DAEMON_STATUS_SET,\n    memoryUsage,\n    cpuUsage,\n    time,\n    timezone,\n    hostname,\n    uptime,\n    daemonVersion\n  };\n}\n\nexport function projectsStatusSet(status) {\n  const { projects, spiders } = status;\n  return {\n    type: PROJECTS_STATUS_SET,\n    projects,\n    spiders\n  };\n}\n\nexport function jobsStatusSet(status) {\n  const {\n    jobsRun, jobsSuccessful, jobsFailed, jobsCanceled, jobsScheduled\n  } = status;\n  return {\n    type: JOBS_STATUS_SET,\n    jobsRun,\n    jobsSuccessful,\n    jobsFailed,\n    jobsCanceled,\n    jobsScheduled\n  };\n}\n","//------------------------------------------------------------------------------\n// Author: Lukasz Janyst <lukasz@jany.st>\n// Date: 09.02.2018\n//\n// Licensed under the 3-Clause BSD License, see the LICENSE file for details.\n//------------------------------------------------------------------------------\n\nimport {\n  DAEMON_STATUS_SET, PROJECTS_STATUS_SET, JOBS_STATUS_SET\n} from '../actions/status';\n\nconst statusState = {\n  memoryUsage: 0,\n  cpuUsage: 0,\n  time: 0,\n  timezone: 'UTC',\n  hostname: 'unknown',\n  uptime: '0m',\n  daemonVersion: '0.0.0',\n  projects: 0,\n  spiders: 0,\n  jobsRun: 0,\n  jobsSuccessful: 0,\n  jobsFailed: 0,\n  jobsCanceled: 0,\n  jobsScheduled: 0\n};\n\nexport function statusReducer(state = statusState, action) {\n  switch(action.type) {\n\n  case DAEMON_STATUS_SET:\n    return {\n      ...state,\n      memoryUsage: action.memoryUsage,\n      cpuUsage: action.cpuUsage,\n      time: action.time,\n      timezone: action.timezone,\n      hostname: action.hostname,\n      uptime: action.uptime,\n      daemonVersion: action.daemonVersion\n    };\n\n  case PROJECTS_STATUS_SET:\n    return {\n      ...state,\n      projects: action.projects,\n      spiders: action.spiders\n    };\n\n  case JOBS_STATUS_SET:\n    return {\n      ...state,\n      jobsRun: action.jobsRun,\n      jobsSuccessful: action.jobsSuccessful,\n      jobsFailed: action.jobsFailed,\n      jobsCanceled: action.jobsCanceled,\n      jobsScheduled: action.jobsScheduled\n    };\n\n  default:\n    return state;\n  }\n}\n","//------------------------------------------------------------------------------\n// Author: Lukasz Janyst <lukasz@jany.st>\n// Date: 13.02.2018\n//\n// Licensed under the 3-Clause BSD License, see the LICENSE file for details.\n//------------------------------------------------------------------------------\n\nexport const PROJECT_PUSH = 'PROJECT_PUSH';\nexport const PROJECT_REMOVE = 'PROJECT_REMOVE';\nexport const PROJECT_LIST_SET = 'PROJECT_LIST_SET';\n\nexport function projectPush(name, spiders) {\n  return {\n    type: PROJECT_PUSH,\n    name,\n    spiders\n  };\n}\n\nexport function projectRemove(name) {\n  return {\n    type: PROJECT_REMOVE,\n    name\n  };\n}\n\nexport function projectListSet(projects) {\n  return {\n    type: PROJECT_LIST_SET,\n    projects\n  };\n}\n","//------------------------------------------------------------------------------\n// Author: Lukasz Janyst <lukasz@jany.st>\n// Date: 13.02.2018\n//\n// Licensed under the 3-Clause BSD License, see the LICENSE file for details.\n//------------------------------------------------------------------------------\n\nimport {\n  PROJECT_PUSH, PROJECT_REMOVE, PROJECT_LIST_SET\n} from '../actions/projects';\n\nconst projectsState = {};\n\nexport function projectsReducer(state = projectsState, action) {\n  switch(action.type) {\n\n  case PROJECT_PUSH:\n    return {\n      ...state,\n      [action.name]: {\n        name: action.name,\n        spiders: action.spiders\n      }\n    };\n\n  case PROJECT_REMOVE:\n    let newState = Object.assign(state);\n    delete newState[action.name];\n    return newState;\n\n  case PROJECT_LIST_SET:\n    return action.projects.reduce((acc, current) => {\n      acc[current.name] = current;\n      return acc;\n    }, {});\n\n  default:\n    return state;\n  }\n}\n","//------------------------------------------------------------------------------\n// Author: Lukasz Janyst <lukasz@jany.st>\n// Date: 21.02.2018\n//\n// Licensed under the 3-Clause BSD License, see the LICENSE file for details.\n//------------------------------------------------------------------------------\n\nexport const JOB_LIST_SET = 'JOB_LIST_SET';\nexport const JOB_UPDATE = 'JOB_UPDATE';\nexport const JOB_REMOVE = 'JOB_REMOVE';\n\nexport function jobListSet(status, jobs) {\n  return {\n    type: JOB_LIST_SET,\n    status,\n    jobs\n  };\n}\n\nexport function jobUpdate(job) {\n  return {\n    type: JOB_UPDATE,\n    job\n  };\n}\n\nexport function jobRemove(jobId) {\n  return {\n    type: JOB_REMOVE,\n    jobId\n  };\n}\n","//------------------------------------------------------------------------------\n// Author: Lukasz Janyst <lukasz@jany.st>\n// Date: 13.02.2018\n//\n// Licensed under the 3-Clause BSD License, see the LICENSE file for details.\n//------------------------------------------------------------------------------\n\nimport { JOB_LIST_SET, JOB_UPDATE, JOB_REMOVE } from '../actions/jobs';\n\nconst jobsState = {};\n\nfunction filterJob(state, jobId) {\n  let newState = Object.assign(state);\n  if('ACTIVE' in newState)\n    delete newState['ACTIVE'][jobId];\n  if('COMPLETED' in newState)\n    delete newState['COMPLETED'][jobId];\n  return newState;\n}\n\nfunction statusToListName(status) {\n  if(status === 'SCHEDULED' || status === 'PENDING' || status === 'RUNNING')\n    return 'ACTIVE';\n  return 'COMPLETED';\n}\n\nexport function jobsReducer(state = jobsState, action) {\n  switch(action.type) {\n\n  case JOB_LIST_SET:\n    let jobs =  action.jobs.reduce((acc, current) => {\n      acc[current.identifier] = current;\n      return acc;\n    }, {});\n    return {\n      ...state,\n      [action.status]: jobs\n    };\n\n  case JOB_REMOVE:\n    return filterJob(state, action.jobId);\n\n  case JOB_UPDATE:\n    let newState = filterJob(state, action.job.identifier);\n    let listName = statusToListName(action.job.status);\n    newState[listName][action.job.identifier] = action.job;\n    return newState;\n\n  default:\n    return state;\n  }\n}\n","//------------------------------------------------------------------------------\n// Author: Lukasz Janyst <lukasz@jany.st>\n// Date: 18.02.2018\n//\n// Licensed under the 3-Clause BSD License, see the LICENSE file for details.\n//------------------------------------------------------------------------------\n\n//------------------------------------------------------------------------------\n// Make id\n//------------------------------------------------------------------------------\nexport function makeId(length) {\n  var text = '';\n  var possible = 'abcdefghijklmnopqrstuvwxyz0123456789';\n\n  for(var i = 0; i < length; i++)\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\n\n  return text;\n}\n\n//------------------------------------------------------------------------------\n// Capitalize first letter\n//------------------------------------------------------------------------------\nexport function capitalizeFirst(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1).toLowerCase();\n}\n\n//------------------------------------------------------------------------------\n// Validate scheduling spec\n//------------------------------------------------------------------------------\nexport function scheduleValid(spec) {\n  //----------------------------------------------------------------------------\n  // Now is a valid spec\n  //----------------------------------------------------------------------------\n  if(spec === 'now')\n    return true;\n\n  //----------------------------------------------------------------------------\n  // Check the directives\n  //----------------------------------------------------------------------------\n  let directives = spec.toLowerCase().split(' ');\n  if(directives.length === 0)\n    return false;\n\n  if(directives[0] !== 'every')\n    return false;\n\n  if(directives.length < 2)\n    return false;\n\n  //----------------------------------------------------------------------------\n  // Check the interval\n  //----------------------------------------------------------------------------\n  const interval = parseInt(directives[1], 10);\n  if(!isNaN(interval)) {\n    if(directives.length < 3)\n      return false;\n    directives = directives.slice(2);\n  }\n  else\n    directives = directives.slice(1);\n\n  //----------------------------------------------------------------------------\n  // Check the directives\n  //----------------------------------------------------------------------------\n  const directive_names = [\n    'second', 'seconds', 'minute', 'minutes', 'hour', 'hours', 'day', 'days',\n    'week', 'weeks', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday',\n    'saturday', 'sunday', 'at', 'to'];\n  directives = directives.reverse();\n\n  while(directives.length) {\n    //--------------------------------------------------------------------------\n    // Check the directive\n    //--------------------------------------------------------------------------\n    const directive = directives.pop();\n    if(directive_names.indexOf(directive) < 0)\n      return false;\n\n    //--------------------------------------------------------------------------\n    // Check the argument to \"to\"\n    //--------------------------------------------------------------------------\n    if(directive === 'to') {\n      if(!directives.length)\n        return false;\n      let arg = directives.pop();\n      arg = parseInt(arg, 10);\n      if(isNaN(arg))\n        return false;\n    }\n    //--------------------------------------------------------------------------\n    // Check the argument to \"at\"\n    //--------------------------------------------------------------------------\n    else if(directive === 'at') {\n      if(!directives.length)\n        return false;\n      let arg = directives.pop();\n      let argSplit = arg.split(':');\n      if(argSplit.length !== 2)\n        return false;\n      arg = parseInt(argSplit[0], 10);\n      if(isNaN(arg))\n        return false;\n      arg = parseInt(argSplit[1], 10);\n      if(isNaN(arg))\n        return false;\n    }\n  }\n\n  return true;\n}\n\n//------------------------------------------------------------------------------\n// Validate payload\n//------------------------------------------------------------------------------\nexport function payloadValid(str) {\n  var obj = null;\n  try {\n    obj = JSON.parse(str);\n  } catch (e) {\n    return false;\n  }\n  if (typeof obj === 'object' && obj !== null) {\n    return true;\n  }\n  return false;\n}\n","//------------------------------------------------------------------------------\n// Author: Lukasz Janyst <lukasz@jany.st>\n// Date: 30.01.2018\n//\n// Licensed under the 3-Clause BSD License, see the LICENSE file for details.\n//------------------------------------------------------------------------------\n\nimport { makeId } from './helpers';\n\n//------------------------------------------------------------------------------\n// Backend\n//------------------------------------------------------------------------------\nexport class Backend {\n  //----------------------------------------------------------------------------\n  // Constants\n  //----------------------------------------------------------------------------\n  static CONNECTING = 0;\n  static OPENED = 1;\n  static CLOSED = 2;\n  static MSG_RECEIVED = 3;\n  static COUNTDOWN = 4;\n\n  static REMOVE_LISTENER = 0;\n\n  //----------------------------------------------------------------------------\n  // Constructor\n  //----------------------------------------------------------------------------\n  constructor() {\n    const loc = window.location;\n    const wsProtocol = loc.protocol === 'https:' ? 'wss:' : 'ws:';\n    this.wsUrl =\n      process.env.NODE_ENV === 'production'\n        ? `${wsProtocol}//${loc.host}/ws`\n        : 'ws://localhost:7654/ws';\n\n    this.ws = null;\n    this.countdownTimer = null;\n    this.countdown = 0;\n    this.nextTry = 2;\n    this.eventListeners = new Set();\n    this.connect();\n  }\n\n  //----------------------------------------------------------------------------\n  // Connect\n  //----------------------------------------------------------------------------\n  connect = () => {\n    //--------------------------------------------------------------------------\n    // Check and clear the existing state\n    //--------------------------------------------------------------------------\n    if(this.ws)\n      throw Error('Socket not closed');\n\n    if(this.countdownTimer)\n      clearInterval(this.countdownTimer);\n\n    //--------------------------------------------------------------------------\n    // Attempt the connection\n    //--------------------------------------------------------------------------\n    this.dispatchEvent(Backend.CONNECTING, null);\n\n    this.ws = new WebSocket(this.wsUrl);\n\n    //--------------------------------------------------------------------------\n    // On open\n    //--------------------------------------------------------------------------\n    this.ws.onopen = () => {\n      this.dispatchEvent(Backend.OPENED, null);\n      this.nextTry = 2;\n    };\n\n    //--------------------------------------------------------------------------\n    // On Message\n    //--------------------------------------------------------------------------\n    this.ws.onmessage = (evt) => {\n      const message = JSON.parse(evt.data);\n      this.dispatchEvent(Backend.MSG_RECEIVED, message);\n    };\n\n    //--------------------------------------------------------------------------\n    // On Close\n    //--------------------------------------------------------------------------\n    this.ws.onclose = () => {\n      this.dispatchEvent(Backend.CLOSED, null);\n\n      this.ws = null;\n      this.nextTry *= 2;\n      if(this.nextTry > 256)\n        this.nextTry = 256;\n      this.countdown = this.nextTry - 1;\n\n      this.dispatchEvent(Backend.COUNTDOWN, this.countdown + 1);\n\n      const tick = () => {\n        this.dispatchEvent(Backend.COUNTDOWN, this.countdown);\n        if(this.countdown === 0) {\n          this.connect();\n          return;\n        }\n        this.countdown -= 1;\n      };\n      this.countdownTimer = setInterval(tick, 1000);\n    };\n  };\n\n  //----------------------------------------------------------------------------\n  // Add event listener\n  //----------------------------------------------------------------------------\n  addEventListener = (listener) => {\n    this.eventListeners.add(listener);\n  }\n\n  //----------------------------------------------------------------------------\n  // Remove an event listener\n  //----------------------------------------------------------------------------\n  removeEventListener = (listener) => {\n    this.eventListeners.delete(listener);\n  }\n\n  //----------------------------------------------------------------------------\n  // Dispatch event\n  //----------------------------------------------------------------------------\n  dispatchEvent = (event, data) => {\n    let toRemove = [];\n    for(const listener of this.eventListeners) {\n      let ret = listener(event, data);\n      if(ret === Backend.REMOVE_LISTENER)\n        toRemove.push(listener);\n    }\n    for(const listener of toRemove)\n      this.removeEventListener(listener);\n  }\n\n  //----------------------------------------------------------------------------\n  // Send message\n  //----------------------------------------------------------------------------\n  sendMessage = (message) => {\n    //--------------------------------------------------------------------------\n    // Only send messages if we're connected\n    //--------------------------------------------------------------------------\n    if(!this.ws || this.ws.readyState !== WebSocket.OPEN)\n      return Promise.reject(new Error('Backend not connected.'));\n\n    //--------------------------------------------------------------------------\n    // Wrap the message\n    //--------------------------------------------------------------------------\n    const id = makeId(32);\n    const newMessage = Object.assign(message, {\n      type: 'ACTION',\n      id\n    });\n\n    return new Promise((resolve, reject) => {\n      //------------------------------------------------------------------------\n      // Listener handling the answer\n      //------------------------------------------------------------------------\n      const listener = (event, data) => {\n        //----------------------------------------------------------------------\n        // Disconnected, the answer will never arrive\n        //----------------------------------------------------------------------\n        if(event === Backend.CLOSED) {\n          reject(new Error('Backend disconnected'));\n          return Backend.REMOVE_LISTENER;\n        }\n\n        //----------------------------------------------------------------------\n        // We got the response\n        //----------------------------------------------------------------------\n        if(event === Backend.MSG_RECEIVED && data.type === 'ACTION_EXECUTED'\n           && data.id === id) {\n\n          if(data.status === 'OK') {\n            let cleanData = Object.assign(data);\n            delete cleanData.type;\n            delete cleanData.id;\n            delete cleanData.status;\n            resolve(cleanData);\n          }\n          else\n            reject(new Error(data.message));\n\n          return Backend.REMOVE_LISTENER;\n        }\n\n        return null;\n      };\n\n      //------------------------------------------------------------------------\n      // Register the resposne listener and send the message\n      //------------------------------------------------------------------------\n      this.addEventListener(listener);\n      this.ws.send(JSON.stringify(newMessage));\n    });\n  }\n};\n\n//------------------------------------------------------------------------------\n// The backend\n//------------------------------------------------------------------------------\nexport let backend = new Backend();\n","//------------------------------------------------------------------------------\n// Author: Lukasz Janyst <lukasz@jany.st>\n// Date: 29.01.2018\n//\n// Licensed under the 3-Clause BSD License, see the LICENSE file for details.\n//------------------------------------------------------------------------------\n\nimport React, { Component } from 'react';\n\nimport { FaChartLine, FaBlender, FaBolt, FaRegCheckSquare } from 'react-icons/fa';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport { LinkContainer } from 'react-router-bootstrap';\n\n//------------------------------------------------------------------------------\n// The navigation bar\n//------------------------------------------------------------------------------\nclass ScrapyDoNav extends Component {\n\n  //----------------------------------------------------------------------------\n  // Render the component\n  //----------------------------------------------------------------------------\n  render() {\n    return (\n      <Navbar bg='dark' variant='dark' collapseOnSelect expand='md'>\n        <LinkContainer to=\"/\">\n          <Navbar.Brand>\n            Scrapy Do\n          </Navbar.Brand>\n        </LinkContainer>\n        <Navbar.Toggle aria-controls=\"navbar\" />\n        <Navbar.Collapse id=\"navbar\">\n          <Nav className=\"mr-auto\" />\n          <Nav>\n            <LinkContainer to=\"/dashboard\">\n              <Nav.Link><FaChartLine /> Dashboard</Nav.Link>\n            </LinkContainer>\n            <LinkContainer to=\"/project-list\">\n              <Nav.Link><FaBlender /> Projects</Nav.Link>\n            </LinkContainer>\n            <LinkContainer to=\"/job-list/active\">\n              <Nav.Link><FaBolt /> Active Jobs</Nav.Link>\n            </LinkContainer>\n            <LinkContainer to=\"/job-list/completed\">\n              <Nav.Link><FaRegCheckSquare /> Completed Jobs</Nav.Link>\n            </LinkContainer>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    );\n  }\n}\n\nexport default ScrapyDoNav;\n","//------------------------------------------------------------------------------\n// Author: Lukasz Janyst <lukasz@jany.st>\n// Date: 03.02.2018\n//\n// Licensed under the 3-Clause BSD License, see the LICENSE file for details.\n//------------------------------------------------------------------------------\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Alert from 'react-bootstrap/Alert';\n\nimport { backend } from '../utils/Backend';\nimport { BACKEND_CONNECTING, BACKEND_OPENED } from '../actions/backend';\n\n//------------------------------------------------------------------------------\n// Backend status\n//------------------------------------------------------------------------------\nclass BackendStatus extends Component {\n  //----------------------------------------------------------------------------\n  // Render\n  //----------------------------------------------------------------------------\n  render() {\n    //--------------------------------------------------------------------------\n    // We're okay\n    //--------------------------------------------------------------------------\n    if(this.props.status === BACKEND_OPENED)\n      return (<div />);\n\n    //--------------------------------------------------------------------------\n    // Retrying\n    //--------------------------------------------------------------------------\n    if(this.props.status === BACKEND_CONNECTING)\n      return (\n        <div className='col-md-4 col-md-offset-4'>\n          <Alert variant='primary' onClick={this.retryNow}>\n            <div className='alert-content'>\n              Connecting...\n            </div>\n          </Alert>\n        </div>\n      );\n\n    //--------------------------------------------------------------------------\n    // Error\n    //--------------------------------------------------------------------------\n    return (\n      <div className='col-md-4 col-md-offset-4'>\n        <Alert variant='primary' type='button'>\n          <div className='alert-content'>\n            Disconnected. Connecting in\n            <strong> {this.props.countdown}</strong>\n            {this.props.countdown === 1 ? ' second' : ' seconds'}.\n            Click <a className='alert-link' onClick={(evt) => {\n                evt.preventDefault();\n                backend.connect();\n              }} href='#n'>here</a> to\n            try now.\n          </div>\n        </Alert>\n      </div>\n    );\n  }\n}\n\n//------------------------------------------------------------------------------\n// The redux connection\n//------------------------------------------------------------------------------\nfunction mapStateToProps(state, ownProps) {\n  return {\n    status: state.backend.status,\n    countdown: state.backend.countdown\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {};\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BackendStatus);\n","//------------------------------------------------------------------------------\n// Author: Lukasz Janyst <lukasz@jany.st>\n// Date: 30.01.2018\n//\n// Licensed under the 3-Clause BSD License, see the LICENSE file for details.\n//------------------------------------------------------------------------------\n\nimport React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { Table } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport moment from 'moment-timezone';\n\n//------------------------------------------------------------------------------\n// Dashboard\n//------------------------------------------------------------------------------\nclass Dashboard extends Component {\n  render() {\n    const serverTime = moment.unix(this.props.time)\n          .tz(this.props.timezone).format('YYYY-MM-DD HH:mm');\n    return(\n      <div className='col-md-6 col-md-offset-3'>\n        <div className='dashboard-content'>\n          <img src='scrapy-do-logo.png' alt='Scrapy-Do Logo' />\n          <div className='text-summary'>\n            <div>Version {this.props.daemonVersion} @ {this.props.hostname}</div>\n            <div>Server time: {serverTime} ({this.props.timezone})</div>\n            <div>\n              Uptime: {this.props.uptime} | CPU Usage: {this.props.cpuUsage}% |\n              Memory Usage: {this.props.memoryUsage}MB\n            </div>\n            <div>\n              Projects: {this.props.projects} |\n              Spiders: {this.props.spiders}\n            </div>\n\n            <div className='jobs-summary'>\n              <Table striped bordered size=\"sm\">\n                <thead>\n                  <tr>\n                    <th>Jobs Run</th>\n                    <th>Successful</th>\n                    <th>Failed</th>\n                    <th>Canceled</th>\n                    <th>Scheduled</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <td>{this.props.jobsRun}</td>\n                    <td>{this.props.jobsSuccessful}</td>\n                    <td>{this.props.jobsFailed}</td>\n                    <td>{this.props.jobsCanceled}</td>\n                    <td>{this.props.jobsScheduled}</td>\n                  </tr>\n                </tbody>\n              </Table>\n            </div>\n          </div>\n          <div className='text-summary'>\n            [<Link to=\"/about\">About</Link>]\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n//------------------------------------------------------------------------------\n// The redux connection\n//------------------------------------------------------------------------------\nfunction mapStateToProps(state, ownProps) {\n  return {\n    ...state.status\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {};\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);\n","//------------------------------------------------------------------------------\n// Author: Lukasz Janyst <lukasz@jany.st>\n// Date: 17.02.2018\n//\n// Licensed under the 3-Clause BSD License, see the LICENSE file for details.\n//------------------------------------------------------------------------------\n\nimport { backend } from './Backend';\n\n//------------------------------------------------------------------------------\n// Remove project\n//------------------------------------------------------------------------------\nexport function projectRemove(name) {\n  return backend.sendMessage({\n    action: 'PROJECT_REMOVE',\n    name\n  });\n}\n\n//------------------------------------------------------------------------------\n// Push project\n//------------------------------------------------------------------------------\nexport function projectPush(archiveData) {\n  return backend.sendMessage({\n    action: 'PROJECT_PUSH',\n    archiveData\n  });\n}\n\n//------------------------------------------------------------------------------\n// Cancel job\n//------------------------------------------------------------------------------\nexport function jobCancel(jobId) {\n  return backend.sendMessage({\n    action: 'JOB_CANCEL',\n    jobId\n  });\n}\n\n//------------------------------------------------------------------------------\n// Schedule job\n//------------------------------------------------------------------------------\nexport function jobSchedule(project, spider, schedule, description, payload) {\n  return backend.sendMessage({\n    action: 'JOB_SCHEDULE',\n    project,\n    spider,\n    schedule,\n    description,\n    payload\n  });\n}\n","//------------------------------------------------------------------------------\n// Author: Lukasz Janyst <lukasz@jany.st>\n// Date: 30.12.2019\n//\n// Licensed under the 3-Clause BSD License, see the LICENSE file for details.\n//------------------------------------------------------------------------------\n\nimport React, { Component } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\n\n//------------------------------------------------------------------------------\n// Alert dialog\n//------------------------------------------------------------------------------\nclass AlertDialog extends Component {\n  //----------------------------------------------------------------------------\n  // The state\n  //----------------------------------------------------------------------------\n  state = {\n    visible: false,\n    text: ''\n  }\n\n  //----------------------------------------------------------------------------\n  // Close the modal\n  //----------------------------------------------------------------------------\n  close = () => {\n    this.setState({ visible: false });\n  }\n\n  //----------------------------------------------------------------------------\n  // Show the modal\n  //----------------------------------------------------------------------------\n  show = (text) => {\n    this.setState({ visible: true, text: text });\n  }\n\n  //----------------------------------------------------------------------------\n  // Render\n  //----------------------------------------------------------------------------\n  render() {\n    return(\n      <Modal\n        show={this.state.visible}\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n        size='sm'\n      >\n        <Modal.Body>\n          <div className='dialog-content-center'>\n            {this.state.text}\n          </div>\n          <hr/>\n          <div className='alert-content'>\n            <Button variant=\"secondary\" onClick={this.close}>\n              OK\n            </Button>\n          </div>\n        </Modal.Body>\n      </Modal>\n    );\n  }\n}\n\nexport default AlertDialog;\n\n","//------------------------------------------------------------------------------\n// Author: Lukasz Janyst <lukasz@jany.st>\n// Date: 25.02.2018\n//\n// Licensed under the 3-Clause BSD License, see the LICENSE file for details.\n//------------------------------------------------------------------------------\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\n\nimport Form from 'react-bootstrap/Form';\n\nimport { jobSchedule } from '../utils/backendActions';\nimport { scheduleValid, payloadValid } from '../utils/helpers';\n\nimport AlertDialog from './AlertDialog';\n\n//------------------------------------------------------------------------------\n// Schedule Dialog\n//------------------------------------------------------------------------------\nclass ScheduleDialog extends Component {\n  //----------------------------------------------------------------------------\n  // The state\n  //----------------------------------------------------------------------------\n  state = {\n    visible: false,\n    project: '__select',\n    spider: '__select',\n    schedule: 'now',\n    description: '',\n    payload: '{\\n}',\n    projectsDisabled: false,\n    spidersDisabled: true,\n    scheduleDisabled: true,\n    submitDisabled: true,\n    scheduleValidated: true,\n    payloadValidated: true\n  }\n\n  //----------------------------------------------------------------------------\n  // Set up the dialog controller\n  //----------------------------------------------------------------------------\n  componentDidMount() {\n    this.props.provideController({\n      show: this.show\n    });\n  }\n\n  componentWillUnmount() {\n    this.props.provideController(null);\n  }\n\n  //----------------------------------------------------------------------------\n  // Close the modal\n  //----------------------------------------------------------------------------\n  close = () => {\n    this.setState({ visible: false });\n  }\n\n  //----------------------------------------------------------------------------\n  // Show the modal\n  //----------------------------------------------------------------------------\n  show = (project, spider) => {\n    this.setState({\n      visible: true,\n      project: project ? project : '__select',\n      spider: spider ? spider : '__select',\n      schedule: 'now',\n      description: '',\n      payload: '{\\n}',\n      projectsDisabled: project ? true : false,\n      spidersDisabled: true,\n      scheduleDisabled: project && spider ? false : true,\n      submitDisabled: project && spider ? false : true,\n      scheduleValidated: true,\n      payloadValidated: true\n    });\n  }\n\n  //----------------------------------------------------------------------------\n  // Schedule the job\n  //----------------------------------------------------------------------------\n  schedule = () => {\n    jobSchedule(\n      this.state.project,\n      this.state.spider,\n      this.state.schedule,\n      this.state.description,\n      this.state.payload\n    )\n      .catch(error => {\n        setTimeout(() => this.alert.show(error.message), 250);\n      });\n    this.close();\n  }\n\n  //----------------------------------------------------------------------------\n  // On project change\n  //----------------------------------------------------------------------------\n  onProjectChange = (event) => {\n    if(event.target.value === '__select')\n      this.setState({\n        spidersDisabled: true,\n        scheduleDisabled: true,\n        submitDisabled: true,\n        project: event.target.value\n      });\n    else\n      this.setState({\n        spidersDisabled: false,\n        project: event.target.value\n      });\n  }\n\n  //----------------------------------------------------------------------------\n  // On spider change\n  //----------------------------------------------------------------------------\n  onSpiderChange = (event) => {\n    if(event.target.value === '__select')\n      this.setState({\n        scheduleDisabled: true,\n        submitDisabled: true,\n        spider: event.target.value\n      });\n    else\n      this.setState({\n          scheduleDisabled: false,\n          submitDisabled: !scheduleValid(this.state.schedule),\n          spider: event.target.value\n      });\n  }\n\n  //----------------------------------------------------------------------------\n  // On schedule change\n  //----------------------------------------------------------------------------\n  onScheduleChange = (event) => {\n    const scheduleValidated = scheduleValid(event.target.value);\n    this.setState({\n      schedule: event.target.value,\n      scheduleValidated: scheduleValidated,\n      submitDisabled: !scheduleValidated\n    });\n  };\n\n  //----------------------------------------------------------------------------\n  // On payload change\n  //----------------------------------------------------------------------------\n  onPayloadChange = (event) => {\n    const payloadValidated = payloadValid(event.target.value);\n    this.setState({\n      payload: event.target.value,\n      payloadValidated: payloadValidated,\n      submitDisabled: !payloadValidated\n    });\n  };\n\n  //----------------------------------------------------------------------------\n  // Render the dialog\n  //----------------------------------------------------------------------------\n  render() {\n    //--------------------------------------------------------------------------\n    // Project selector\n    //--------------------------------------------------------------------------\n    const projectSelector = (\n      <Form.Group controlId=\"projectSelect\">\n        <Form.Label>Project</Form.Label>\n        <Form.Control\n          as='select'\n          placeholder='__select'\n          disabled={this.state.projectsDisabled}\n          onChange={this.onProjectChange}\n          value={this.state.project}\n        >\n          <option value='__select'>Select Project</option>\n          {this.props.__projects.map(project => (\n            <option key={project} value={project}>\n              {project}\n            </option>\n          ))}\n        </Form.Control>\n      </Form.Group>\n    );\n\n    //--------------------------------------------------------------------------\n    // Spider selector\n    //--------------------------------------------------------------------------\n    let spiders = [];\n    if(this.state.project !== '__select' && this.state.project in this.props) {\n      spiders = this.props[this.state.project].spiders;\n    }\n\n    const spiderSelector = (\n      <Form.Group controlId='spiderSelect'>\n        <Form.Label>Spider</Form.Label>\n        <Form.Control\n          as='select'\n          placeholder='__select'\n          disabled={this.state.spidersDisabled}\n          onChange={this.onSpiderChange}\n          value={this.state.spider}\n        >\n          <option value='__select'>Select Spider</option>\n          {spiders.map(spider => (\n            <option key={spider} value={spider}>\n              {spider}\n            </option>\n          ))}\n        </Form.Control>\n      </Form.Group>\n    );\n\n    //--------------------------------------------------------------------------\n    // Schedule input\n    //--------------------------------------------------------------------------\n    const specDocLink = 'https://scrapy-do.readthedocs.io/en/latest/basic-concepts.html#scheduling-specs';\n    const scheduleInput = (\n      <Form.Group\n        controlId='scheduleInput'\n      >\n        <Form.Label>Schedule</Form.Label>\n        <Form.Control\n          type='text'\n          disabled={this.state.scheduleDisabled}\n          value={this.state.schedule}\n          onChange={this.onScheduleChange}\n          isInvalid={!this.state.scheduleValidated}\n          isValid={this.state.scheduleValidated}\n        />\n\n        <Form.Control.Feedback type=\"valid\">\n          See the <a href={specDocLink}>docs</a> on scheduling specs.\n        </Form.Control.Feedback>\n\n        <Form.Control.Feedback type=\"invalid\">\n          See the <a href={specDocLink}>docs</a> on scheduling specs.\n        </Form.Control.Feedback>\n\n      </Form.Group>\n    );\n\n    //--------------------------------------------------------------------------\n    // Description input\n    //--------------------------------------------------------------------------\n    const descriptionInput = (\n      <Form.Group controlId='descriptionInput'>\n        <Form.Label>Description (optional)</Form.Label>\n        <Form.Control\n          type='text'\n          disabled={this.state.scheduleDisabled}\n          value={this.state.description}\n          onChange={(event) => this.setState({description: event.target.value})}\n        />\n      </Form.Group>\n    );\n\n    //--------------------------------------------------------------------------\n    // Payload input\n    //--------------------------------------------------------------------------\n    const payloadInput = (\n      <Form.Group controlId='payloadInput'>\n        <Form.Label>Payload (optional)</Form.Label>\n        <Form.Control\n          as='textarea'\n          rows={5}\n          disabled={this.state.scheduleDisabled}\n          value={this.state.payload}\n          onChange={this.onPayloadChange}\n          isInvalid={!this.state.payloadValidated}\n          isValid={this.state.payloadValidated}\n        />\n        <Form.Control.Feedback type=\"valid\">\n          Payload needs to be a valid JSON object.\n        </Form.Control.Feedback>\n\n        <Form.Control.Feedback type=\"invalid\">\n          Payload needs to be a valid JSON object.\n        </Form.Control.Feedback>\n      </Form.Group>\n    );\n\n    //--------------------------------------------------------------------------\n    // The whole thing\n    //--------------------------------------------------------------------------\n    return (\n      <div>\n        <AlertDialog ref={(el) => { this.alert = el; }} />\n        <Modal\n          show={this.state.visible}\n          aria-labelledby=\"contained-modal-title-vcenter\"\n          centered\n        >\n          <Modal.Body>\n            <div className='dialog-content-left'>\n              {projectSelector}\n              {spiderSelector}\n              {scheduleInput}\n              {descriptionInput}\n              {payloadInput}\n            </div>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={this.close}>\n              Cancel\n            </Button>\n            <Button\n              variant=\"success\"\n              onClick={this.schedule}\n              disabled={this.state.submitDisabled}\n            >\n              Schedule\n            </Button>\n          </Modal.Footer>\n        </Modal>\n\n      </div>\n    );\n  }\n}\n\n//------------------------------------------------------------------------------\n// The redux connection\n//------------------------------------------------------------------------------\nfunction mapStateToProps(state, ownProps) {\n  return {\n    __projects: Object.keys(state.projects).sort(),\n    ...state.projects\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {};\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ScheduleDialog);\n","//------------------------------------------------------------------------------\n// Author: Lukasz Janyst <lukasz@jany.st>\n// Date: 30.12.2019\n//\n// Licensed under the 3-Clause BSD License, see the LICENSE file for details.\n//------------------------------------------------------------------------------\n\nimport React, { Component } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\n\n//------------------------------------------------------------------------------\n// Remove project\n//------------------------------------------------------------------------------\nclass YesNoDialog extends Component {\n  //----------------------------------------------------------------------------\n  // The state\n  //----------------------------------------------------------------------------\n  state = {\n    visible: false,\n    text: ''\n  }\n\n  //----------------------------------------------------------------------------\n  // No\n  //----------------------------------------------------------------------------\n  no = () => {\n    this.setState({ visible: false });\n    if (this.state.no && this.state.no.fn) {\n      this.state.no.fn();\n    }\n  }\n\n  //----------------------------------------------------------------------------\n  // Yes\n  //----------------------------------------------------------------------------\n  yes = () => {\n    if (this.state.yes && this.state.yes.fn) {\n      this.state.yes.fn();\n    }\n    this.setState({ visible: false });\n  }\n\n  //----------------------------------------------------------------------------\n  // Show the modal\n  //----------------------------------------------------------------------------\n  show = (text, yes, no) => {\n    this.setState({\n      visible: true,\n      text,\n      yes,\n      no\n    });\n  }\n\n  //----------------------------------------------------------------------------\n  // Render\n  //----------------------------------------------------------------------------\n  render() {\n    var noVariant = 'secondary';\n    var yesVariant = 'primary';\n    var noText = 'Cancel';\n    var yesText = 'Ok';\n\n    if (this.state.no) {\n      if (this.state.no.variant) noVariant = this.state.no.variant;\n      if (this.state.no.text) noText = this.state.no.text;\n    }\n\n    if (this.state.yes) {\n      if (this.state.yes.variant) yesVariant = this.state.yes.variant;\n      if (this.state.yes.text) yesText = this.state.yes.text;\n    }\n\n    return(\n      <div>\n        <Modal\n          show={this.state.visible}\n          aria-labelledby=\"contained-modal-title-vcenter\"\n          centered\n          size='sm'\n        >\n          <Modal.Body>\n            <div className='dialog-content-center'>\n              {this.state.text}\n            </div>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button\n              variant={noVariant}\n              onClick={this.no}\n            >\n              {noText}\n            </Button>\n            <Button\n              variant={yesVariant}\n              onClick={this.yes}\n            >\n              {yesText}\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default YesNoDialog;\n","//------------------------------------------------------------------------------\n// Author: Lukasz Janyst <lukasz@jany.st>\n// Date: 13.02.2018\n//\n// Licensed under the 3-Clause BSD License, see the LICENSE file for details.\n//------------------------------------------------------------------------------\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport { FaRegTrashAlt, FaBolt } from 'react-icons/fa';\n\nimport { BACKEND_OPENED } from '../actions/backend';\nimport { projectRemove } from '../utils/backendActions';\n\nimport ScheduleDialog from './ScheduleDialog';\nimport YesNoDialog from './YesNoDialog';\nimport AlertDialog from './AlertDialog';\n\n//------------------------------------------------------------------------------\n// Project List Item\n//------------------------------------------------------------------------------\nclass ProjectListItem extends Component {\n  //----------------------------------------------------------------------------\n  // Property types\n  //----------------------------------------------------------------------------\n  static propTypes = {\n    projectName: PropTypes.string.isRequired\n  }\n\n  //----------------------------------------------------------------------------\n  // Show the remove dialog\n  //----------------------------------------------------------------------------\n  showRemoveDialog = () => {\n    const project = this.props;\n    const removeProject = () => {\n      projectRemove(project.name)\n        .catch((error) => {\n          setTimeout(() => this.alertDialog.show(error.message), 250);\n        });\n    };\n\n    const yes = {\n      variant: 'danger',\n      text: 'Remove',\n      fn: removeProject\n    };\n\n    const msg = `Are you sure you want to remove project \"${project.name}\"?`;\n    this.removeDialog.show(msg, yes);\n  }\n\n  //----------------------------------------------------------------------------\n  // Render\n  //----------------------------------------------------------------------------\n  render() {\n    const project = this.props;\n    return(\n      <div className='project-list-item'>\n        <YesNoDialog ref={(el) => { this.removeDialog = el; }} />\n        <AlertDialog ref={(el) => { this.alertDialog = el; }} />\n        <ScheduleDialog\n          provideController={ctl => this.scheduleDialogCtl = ctl}\n        />\n        <Card>\n          <Card.Header>\n            <div className='list-item'>\n              <div className='item-panel'>\n                <Button\n                  size='sm'\n                  variant='secondary'\n                  disabled={!this.props.connected}\n                  onClick={this.showRemoveDialog}\n                >\n                  <FaRegTrashAlt /> Remove\n                </Button>\n              </div>\n              <strong>{project.name}</strong>\n            </div>\n          </Card.Header>\n          <Card.Body>\n            <div className='spider-list'>\n              {project.spiders.map(spider => (\n                <Button\n                  size='sm'\n                  variant='outline-secondary'\n                  disabled={!this.props.connected}\n                  key={spider}\n                  onClick={() => {\n                    this.scheduleDialogCtl.show(project.name, spider);\n                  }}\n                >\n                  <FaBolt /> {spider}\n                </Button>\n              ))}\n            </div>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n\n//------------------------------------------------------------------------------\n// The redux connection\n//------------------------------------------------------------------------------\nfunction mapStateToProps(state, ownProps) {\n  return {\n    ...state.projects[ownProps.projectName],\n    connected: state.backend.status === BACKEND_OPENED\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {};\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectListItem);\n","//------------------------------------------------------------------------------\n// Author: Lukasz Janyst <lukasz@jany.st>\n// Date: 30.12.2019\n//\n// Licensed under the 3-Clause BSD License, see the LICENSE file for details.\n//------------------------------------------------------------------------------\n\nimport React, { Component } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\n\nimport { projectPush } from '../utils/backendActions';\n\nimport AlertDialog from './AlertDialog';\n\n//------------------------------------------------------------------------------\n// Push project\n//------------------------------------------------------------------------------\nclass PushProjectDialog extends Component {\n  //----------------------------------------------------------------------------\n  // The state\n  //----------------------------------------------------------------------------\n  state = {\n    visible: false,\n    pushEnabled: false\n  }\n\n  //----------------------------------------------------------------------------\n  // Close the modal\n  //----------------------------------------------------------------------------\n  close = () => {\n    this.setState({ visible: false });\n  }\n\n  //----------------------------------------------------------------------------\n  // Show the modal\n  //----------------------------------------------------------------------------\n  show = () => {\n    this.setState({ visible: true });\n  }\n\n  //----------------------------------------------------------------------------\n  // Push the project\n  //----------------------------------------------------------------------------\n  push = () => {\n    if(!this.archivePromise) {\n      setTimeout(() => this.alert.show('No file selected.'), 250);\n      this.close();\n      return;\n    }\n\n    this.archivePromise\n      .then(result => projectPush(result))\n      .then(() => { this.archivePromise = null; })\n      .catch(error => {\n        setTimeout(() => this.alert.show(error.message), 250);\n      });\n    this.close();\n  }\n\n  //----------------------------------------------------------------------------\n  // File picker change event\n  //----------------------------------------------------------------------------\n  fileSelectorChange = (event) => {\n    const files = event.target.files;\n    if(!files.length)\n      return;\n\n    this.setState({ pushEnabled: true });\n\n    this.archivePromise = new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsBinaryString(files[0]);\n      reader.onload = () => resolve(btoa(reader.result));\n      reader.onerror = error => reject(error);\n    });\n  };\n\n  //----------------------------------------------------------------------------\n  // Render\n  //----------------------------------------------------------------------------\n  render() {\n    return(\n      <div>\n        <AlertDialog ref={(el) => { this.alert = el; }} />\n        <Modal\n          show={this.state.visible}\n          aria-labelledby=\"contained-modal-title-vcenter\"\n          centered\n        >\n          <Modal.Body>\n            <div className='dialog-content-center'>\n              <label>Choose a project archive:</label>\n              <input type='file' id='filePicker' accept='.zip'\n                     onChange={this.fileSelectorChange}/>\n            </div>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={this.close}>\n              Cancel\n            </Button>\n            <Button\n              variant=\"primary\"\n              onClick={this.push}\n              disabled={!this.state.pushEnabled}\n            >\n              Push\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default PushProjectDialog;\n\n","//------------------------------------------------------------------------------\n// Author: Lukasz Janyst <lukasz@jany.st>\n// Date: 30.01.2018\n//\n// Licensed under the 3-Clause BSD License, see the LICENSE file for details.\n//------------------------------------------------------------------------------\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { FaRegArrowAltCircleUp } from 'react-icons/fa';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nimport { BACKEND_OPENED } from '../actions/backend';\n\nimport ProjectListItem from './ProjectListItem';\nimport PushProjectDialog from './PushProjectDialog';\n\n//------------------------------------------------------------------------------\n// Project List\n//------------------------------------------------------------------------------\nclass ProjectList extends Component {\n  //----------------------------------------------------------------------------\n  // Render\n  //----------------------------------------------------------------------------\n  render() {\n    const projectNames = this.props.projects;\n\n    var list = (\n      <Card>\n        <div className='list-empty'>No projects.</div>\n      </Card>\n    );\n\n    if(projectNames.length)\n      list = (\n        <div>\n          {projectNames.map(project => (\n            <ProjectListItem\n              key={project}\n              projectName={project} />\n          ))}\n        </div>\n      );\n\n    return(\n      <div className='col-md-8 col-md-offset-2'>\n        <PushProjectDialog ref={(el) => { this.dialog = el; }} />\n        <h2>Projects</h2>\n        <div className='control-button-container'>\n          <Button\n            variant=\"outline-secondary\"\n            size=\"sm\"\n            disabled={!this.props.connected}\n            onClick={() => this.dialog.show()}\n            >\n            <FaRegArrowAltCircleUp /> Push project\n          </Button>\n        </div>\n        {list}\n      </div>\n    );\n  }\n}\n\n//------------------------------------------------------------------------------\n// The redux connection\n//------------------------------------------------------------------------------\nfunction mapStateToProps(state, ownProps) {\n  return {\n    projects: Object.keys(state.projects).sort(),\n    connected: state.backend.status === BACKEND_OPENED\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {};\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectList);\n","//------------------------------------------------------------------------------\n// Author: Lukasz Janyst <lukasz@jany.st>\n// Date: 21.02.2018\n//\n// Licensed under the 3-Clause BSD License, see the LICENSE file for details.\n//------------------------------------------------------------------------------\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Button from 'react-bootstrap/Button';\nimport Badge from 'react-bootstrap/Badge';\nimport Accordion from 'react-bootstrap/Accordion';\nimport moment from 'moment-timezone';\nimport hljs from 'highlight.js';\nimport { LazyLog } from 'react-lazylog';\nimport { useAccordionToggle } from 'react-bootstrap/AccordionToggle';\nimport { FaRegTimesCircle } from 'react-icons/fa';\n\nimport { BACKEND_OPENED } from '../actions/backend';\nimport { capitalizeFirst } from '../utils/helpers';\nimport { jobCancel } from '../utils/backendActions';\n\nimport YesNoDialog from './YesNoDialog';\nimport AlertDialog from './AlertDialog';\n\n//------------------------------------------------------------------------------\n// Convert status to label class\n//------------------------------------------------------------------------------\nconst statusToLabel = (status) => {\n  switch(status) {\n  case 'SCHEDULED': return 'primary';\n  case 'PENDING': return 'warning';\n  case 'RUNNING': return 'success';\n  case 'CANCELED': return 'warning';\n  case 'SUCCESSFUL': return 'success';\n  case 'FAILED': return 'danger';\n  default: return 'primary';\n  }\n};\n\n//------------------------------------------------------------------------------\n// Toggle\n//------------------------------------------------------------------------------\nfunction Toggle({ text, eventKey, fn }) {\n  const onClick = useAccordionToggle(\n    eventKey,\n    (event) => {\n      if (fn) {\n        fn();\n      }\n      event.preventDefault();\n    });\n  return (\n    <a href='foo' onClick={onClick}>\n      {text}\n    </a>\n  );\n}\n\n//------------------------------------------------------------------------------\n// Get log URL\n//------------------------------------------------------------------------------\nconst getLogURL = (jobID, isError) => {\n  const loc = window.location;\n  const baseUrl =\n      process.env.NODE_ENV === 'production'\n        ? `${loc.protocol}//${loc.host}`\n        : 'http://localhost:7654';\n  const logType = isError ? 'err' : 'out';\n  return `${baseUrl}/get-log/data/${jobID}.${logType}`;\n};\n\n//------------------------------------------------------------------------------\n// Job List Item\n//------------------------------------------------------------------------------\nclass JobListItem extends Component {\n  //----------------------------------------------------------------------------\n  // Property types\n  //----------------------------------------------------------------------------\n  static propTypes = {\n    jobId: PropTypes.string.isRequired,\n    jobList: PropTypes.string.isRequired\n  }\n\n  //----------------------------------------------------------------------------\n  // Show cancel dialog\n  //----------------------------------------------------------------------------\n  showCancelDialog = () => {\n    const job = this.props;\n    const cancelJob = () => {\n      jobCancel(job.identifier)\n        .catch((error) => {\n          setTimeout(() => this.alertDialog.show(error.message), 250);\n        });\n    };\n\n    const yes = {\n      variant: 'danger',\n      text: 'Yes',\n      fn: cancelJob\n    };\n    const no = {\n      text: 'No'\n    };\n\n    const msg = `Are you sure you want to cancel the job?`;\n    this.cancelDialog.show(msg, yes, no);\n  };\n\n  //----------------------------------------------------------------------------\n  // Render the component\n  //----------------------------------------------------------------------------\n  render() {\n    const job = this.props;\n    const timestamp = moment.unix(job.timestamp);\n    const dateTime = timestamp.tz(this.props.timezone)\n          .format('YYYY-MM-DD HH:mm:ss');\n\n    //--------------------------------------------------------------------------\n    // Cancellation button\n    //--------------------------------------------------------------------------\n    let cancelButton = (\n      <div className='item-panel-button'>\n        <Button\n          variant=\"outline-secondary\"\n          size=\"sm\"\n          disabled={!this.props.connected}\n          onClick={this.showCancelDialog}\n        >\n          <FaRegTimesCircle /> Cancel\n        </Button>\n      </div>\n    );\n\n    //--------------------------------------------------------------------------\n    // Logs\n    //--------------------------------------------------------------------------\n    let outCollapse = null;\n    let outToggle = null;\n    let outAccordionKey = `out-${job.identifier}`;\n    let errCollapse = null;\n    let errToggle = null;\n    let errAccordionKey = `err-${job.identifier}`;\n\n    outToggle = (\n      <Toggle eventKey={outAccordionKey} text='Out Log' />\n    );\n\n    errToggle = (\n      <Toggle eventKey={errAccordionKey} text='Err Log' />\n    );\n\n    outCollapse = (\n        <Accordion.Collapse eventKey={outAccordionKey}>\n          <div>\n            <div className=\"accordion-header\">Out Log</div>\n            <div style={{ height: 500 }}>\n              <LazyLog\n                url={getLogURL(job.identifier, false)}\n                stream\n                follow\n                extraLines={1}\n                enableSearch\n                caseInsensitive\n                selectableLines\n              />\n            </div>\n          </div>\n        </Accordion.Collapse>\n      );\n\n    errCollapse = (\n        <Accordion.Collapse eventKey={errAccordionKey}>\n          <div>\n            <div className=\"accordion-header\">Err Log</div>\n            <div style={{ height: 500 }}>\n              <LazyLog\n                url={getLogURL(job.identifier, true)}\n                stream\n                follow\n                extraLines={1}\n                enableSearch\n                caseInsensitive\n                selectableLines\n              />\n            </div>\n          </div>\n        </Accordion.Collapse>\n      );\n\n    if(this.props.jobList === 'COMPLETED') {\n      cancelButton = null;\n\n      if (!job.outLog) {\n        outToggle = null;\n        outCollapse = null;\n      }\n\n      if (!job.errLog) {\n        errToggle = null;\n        errCollapse = null;\n      }\n    }\n\n    if(this.props.jobList === 'ACTIVE' && job.status !== \"RUNNING\") {\n      outToggle = null;\n      outCollapse = null;\n      errToggle = null;\n      errCollapse = null;\n    }\n\n    //--------------------------------------------------------------------------\n    // Payload\n    //--------------------------------------------------------------------------\n    let payloadCollapse = null;\n    let payloadToggle = null;\n    let payloadAccordionKey = `payload-${job.identifier}`;\n    let payload = JSON.stringify(JSON.parse(job.payload), null, 4);\n    const highlighted = hljs.highlight('json', payload).value;\n\n    if (payload !== '{}') {\n      payloadToggle = (\n        <Toggle eventKey={payloadAccordionKey} text='Payload' />\n      );\n\n      payloadCollapse = (\n        <Accordion.Collapse eventKey={payloadAccordionKey}>\n          <div>\n            <div className=\"accordion-header\">Payload</div>\n            <pre className='hljs'>\n              <code dangerouslySetInnerHTML={{__html: highlighted}} />\n            </pre>\n          </div>\n        </Accordion.Collapse>\n      );\n    }\n\n    const secondaryPanel = (\n      <div className='item-panel' title={dateTime}>\n        {outToggle}\n        {outToggle && (errToggle || payloadToggle) ? ' | ' : ''}\n        {errToggle}\n        {errToggle && payloadToggle ? ' | ' : ''}\n        {payloadToggle}\n        {cancelButton}\n      </div>\n    );\n\n    //--------------------------------------------------------------------------\n    // Render the whole thing\n    //--------------------------------------------------------------------------\n    var description = '';\n    if (job.description !== '') {\n      description = `[${job.description}]`;\n    }\n\n    return (\n      <ListGroup.Item>\n        <YesNoDialog ref={(el) => { this.cancelDialog = el; }} />\n        <AlertDialog ref={(el) => { this.alertDialog = el; }} />\n        <Accordion>\n        <div className='list-group-item-body'>\n          <div className='list-item'>\n            <div className='item-panel' title={dateTime}>\n              {timestamp.fromNow()}\n            </div>\n            <Badge variant={statusToLabel(job.status)}>\n              {job.status}\n            </Badge>\n            <strong> {job.spider} {description}</strong> ({job.project})\n          </div>\n          <div className='list-item-secondary'>\n            {secondaryPanel}\n            Scheduled by {capitalizeFirst(job.actor)} to run {job.schedule}.\n          </div>\n        </div>\n        {payloadCollapse}\n        {outCollapse}\n        {errCollapse}\n        </Accordion>\n      </ListGroup.Item>\n    );\n  }\n}\n\n//------------------------------------------------------------------------------\n// The redux connection\n//------------------------------------------------------------------------------\nfunction mapStateToProps(state, ownProps) {\n  return {\n    ...state.jobs[ownProps.jobList][ownProps.jobId],\n    timezone: state.status.timezone,\n    connected: state.backend.status === BACKEND_OPENED\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {};\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(JobListItem);\n","//------------------------------------------------------------------------------\n// Author: Lukasz Janyst <lukasz@jany.st>\n// Date: 30.01.2018\n//\n// Licensed under the 3-Clause BSD License, see the LICENSE file for details.\n//------------------------------------------------------------------------------\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { FaCalendarAlt } from 'react-icons/fa';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport sortBy from 'sort-by';\n\nimport { BACKEND_OPENED } from '../actions/backend';\nimport { capitalizeFirst } from '../utils/helpers';\n\nimport JobListItem from './JobListItem';\nimport ScheduleDialog from './ScheduleDialog';\n\n//------------------------------------------------------------------------------\n// Job list\n//------------------------------------------------------------------------------\nclass JobList extends Component {\n  //----------------------------------------------------------------------------\n  // Render\n  //----------------------------------------------------------------------------\n  render() {\n    const jobIds = this.props.jobs;\n    const status = this.props.match.params.status;\n\n    //--------------------------------------------------------------------------\n    // Job list\n    //--------------------------------------------------------------------------\n    let list = (\n      <Card>\n        <div className='list-empty'>No jobs.</div>\n      </Card>\n    );\n\n    if(jobIds.length) {\n      list = (\n        <ListGroup>\n          {jobIds.map(jobId => (\n            <JobListItem\n              key={jobId}\n              jobId={jobId}\n              jobList={status.toUpperCase()}\n            />\n          ))}\n        </ListGroup>\n      );\n    }\n\n    //--------------------------------------------------------------------------\n    // Schedule button\n    //--------------------------------------------------------------------------\n    let scheduleButton = (\n      <div className='control-button-container'>\n        <Button\n          variant=\"outline-secondary\"\n          size=\"sm\"\n          disabled={!this.props.connected}\n          onClick={() => this.scheduleDialogCtl.show()}\n        >\n          <FaCalendarAlt /> Schedule a job\n        </Button>\n      </div>\n    );\n\n    if(status === 'completed')\n      scheduleButton = null;\n\n    //--------------------------------------------------------------------------\n    // The container\n    //--------------------------------------------------------------------------\n    return(\n      <div className='col-md-8 col-md-offset-2'>\n        <ScheduleDialog\n          provideController={ctl => this.scheduleDialogCtl = ctl}\n        />\n        <h2>{capitalizeFirst(status)} Jobs</h2>\n        {scheduleButton}\n        <div className='content-container'>\n          {list}\n        </div>\n      </div>\n    );\n  }\n}\n\n//------------------------------------------------------------------------------\n// The redux connection\n//------------------------------------------------------------------------------\nfunction mapStateToProps(state, ownProps) {\n  const jobStatus = ownProps.match.params.status.toUpperCase();\n  let jobs = [];\n  if(jobStatus in state.jobs) {\n    jobs = Object.keys(state.jobs[jobStatus])\n      .map(key => state.jobs[jobStatus][key])\n      .sort(sortBy('-timestamp'))\n      .map(obj => obj.identifier);\n  }\n  return {\n    jobs,\n    connected: state.backend.status === BACKEND_OPENED\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {};\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(JobList);\n","//------------------------------------------------------------------------------\n// Author: Lukasz Janyst <lukasz@jany.st>\n// Date: 02.01.2020\n//\n// Licensed under the 3-Clause BSD License, see the LICENSE file for details.\n//------------------------------------------------------------------------------\n\nimport React, { Component } from 'react';\nimport { Table } from 'react-bootstrap';\n\n//------------------------------------------------------------------------------\n// About\n//------------------------------------------------------------------------------\nclass About extends Component {\n  render() {\n    const pkgs = [\n      {\n        name: 'python',\n        website: 'https://www.python.org/',\n        license: 'PSFL'\n      },\n\n      {\n        name: 'scrapy',\n        website: 'https://scrapy.org/',\n        license: 'BSD'\n      },\n      {\n        name: 'twisted',\n        website: 'https://twistedmatrix.com/trac/',\n        license: 'MIT'\n      },\n      {\n        name: 'pyOpenSSL',\n        website: 'https://pyopenssl.org/',\n        license: 'Apache 2.0'\n      },\n      {\n        name: 'psutil',\n        website: 'https://github.com/giampaolo/psutil',\n        license: 'BSD'\n      },\n      {\n        name: 'python-dateutil',\n        website: 'https://dateutil.readthedocs.io/',\n        license: 'BSD'\n      },\n      {\n        name: 'schedule',\n        website: 'https://github.com/dbader/schedule',\n        license: 'MIT'\n      },\n      {\n        name: 'pem',\n        website: 'https://pem.readthedocs.io/',\n        license: 'MIT'\n      },\n      {\n        name: 'tabulate',\n        website: 'https://github.com/astanin/python-tabulate',\n        license: 'MIT'\n      },\n      {\n        name: 'requests',\n        website: 'http://python-requests.org/',\n        license: 'Apache 2.0'\n      },\n      {\n        name: 'autobahn',\n        website: 'http://crossbar.io/autobahn',\n        license: 'MIT'\n      },\n      {\n        name: 'tzlocal',\n        website: 'https://github.com/regebro/tzlocal',\n        license: 'MIT'\n      },\n      {\n        name: 'bootstrap',\n        website: 'https://getbootstrap.com/',\n        license: 'MIT'\n      },\n      {\n        name: 'highlight.js',\n        website: 'https://highlightjs.org/',\n        license: 'BSD'\n      },\n      {\n        name: 'moment-timezone',\n        website: 'http://momentjs.com/timezone/',\n        license: 'MIT'\n      },\n      {\n        name: 'prop-types',\n        website: 'https://facebook.github.io/react/',\n        license: 'MIT'\n      },\n      {\n        name: 'react',\n        website: 'https://github.com/facebook/react',\n        license: 'MIT'\n      },\n      {\n        name: 'react-dom',\n        website: 'https://github.com/facebook/react',\n        license: 'MIT'\n      },\n      {\n        name: 'react-icons',\n        website: 'https://github.com/react-icons/react-icons#readme',\n        license: 'MIT'\n      },\n      {\n        name: 'Font Awesome',\n        website: 'https://fontawesome.com/',\n        license: 'CC BY 4.0'\n      },\n      {\n        name: 'react-lazylog',\n        website: 'https://github.com/mozilla-frontend-infra/react-lazylog#readme',\n        license: 'MPL-2.0'\n      },\n      {\n        name: 'redux',\n        website: 'http://redux.js.org/',\n        license: 'MIT'\n      },\n      {\n        name: 'react-redux',\n        website: 'https://github.com/reduxjs/react-redux',\n        license: 'MIT'\n      },\n      {\n        name: 'react-router-dom',\n        website: 'https://github.com/ReactTraining/react-router#readme',\n        license: 'MIT'\n      },\n      {\n        name: 'rect-router-bootstrap',\n        website: 'https://github.com/react-bootstrap/react-router-bootstrap',\n        license: 'Apache 2.0'\n      },\n      {\n        name: 'react-scripts',\n        website: 'https://github.com/facebook/create-react-app#readme',\n        license: 'MIT'\n      },\n      {\n        name: 'sort-by',\n        website: 'https://github.com/kvnneff/sort-by#readme',\n        license: 'MIT'\n      },\n      {\n        name: 'node.js',\n        website: 'https://nodejs.org/en/',\n        license: 'MIT'\n      },\n      {\n        name: 'docutils',\n        website: 'http://docutils.sourceforge.net/',\n        license: 'multiple'\n      },\n      {\n        name: 'pygments',\n        website: 'http://pygments.org/',\n        license: 'BSD'\n      },\n      {\n        name: 'pytest',\n        website: 'https://docs.pytest.org/en/latest/',\n        license: 'MIT'\n      },\n      {\n        name: 'pytest-cov',\n        website: 'https://github.com/pytest-dev/pytest-cov',\n        license: 'BSD'\n      },\n      {\n        name: 'pytest-flake8',\n        website: 'https://github.com/tholo/pytest-flake8',\n        license: 'BSD'\n      },\n      {\n        name: 'sphinx',\n        website: 'http://sphinx-doc.org/',\n        license: 'BSD'\n      },\n    ];\n\n    return(\n      <div className='col-md-6 col-md-offset-3'>\n        <div className='dashboard-content'>\n          <div className='text-summary'>\n            <div>Scrapy-Do has been developed by Lukasz Janyst</div>\n            <div>and is distributed under the 3-Clause BSD License.</div>\n          </div>\n          <div className='text-summary'>\n            <div>It directly uses on the following packages either at runtime or for development:</div>\n          </div>\n          <div className='text-summary'>\n            <div className='jobs-summary'>\n              <Table striped bordered size=\"sm\">\n                <thead>\n                  <tr>\n                    <th>Name</th>\n                    <th>License</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {\n                    pkgs.map(pkg => (\n                      <tr key={pkg.name}>\n                        <td><a href={pkg.website}>{pkg.name}</a></td>\n                        <td>{pkg.license}</td>\n                      </tr>\n                    ))\n                  }\n                </tbody>\n              </Table>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default About;\n","//------------------------------------------------------------------------------\n// Author: Lukasz Janyst <lukasz@jany.st>\n// Date: 30.01.2018\n//\n// Licensed under the 3-Clause BSD License, see the LICENSE file for details.\n//------------------------------------------------------------------------------\n\nimport React from 'react';\nimport { FaDirections } from 'react-icons/fa';\n\nexport default function WrongRoute(props) {\n  return (\n    <div className='col-md-8 col-md-offset-2'>\n      <div style={{textAlign: 'center'}}>\n        <div style={{margin: '3em'}}>\n          <FaDirections size={300} color='DimGrey'/>\n        </div>\n        <h3>This is not what you're looking for.</h3>\n        </div>\n    </div>\n  );\n}\n","//------------------------------------------------------------------------------\n// Author: Lukasz Janyst <lukasz@jany.st>\n// Date: 29.01.2018\n//\n// Licensed under the 3-Clause BSD License, see the LICENSE file for details.\n//------------------------------------------------------------------------------\n\nimport React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport ScrapyDoNav from './ScrapyDoNav';\nimport BackendStatus from './BackendStatus';\nimport Dashboard from './Dashboard';\nimport ProjectList from './ProjectList';\nimport JobList from './JobList';\nimport About from './About';\nimport WrongRoute from './WrongRoute';\n\nclass ScrapyDoApp extends Component {\n  render() {\n    return (\n      <div>\n        <ScrapyDoNav />\n        <div className='content'>\n          <BackendStatus />\n          <Switch>\n            <Route exact path='/' component={Dashboard} />\n            <Route exact path='/dashboard' component={Dashboard} />\n            <Route exact path='/project-list' component={ProjectList} />\n            <Route path='/job-list/:status' component={JobList} />\n            <Route exact path='/about' component={About} />\n            <Route component={WrongRoute} />\n          </Switch>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ScrapyDoApp;\n","//------------------------------------------------------------------------------\n// Author: Lukasz Janyst <lukasz@jany.st>\n// Date: 29.01.2018\n//\n// Licensed under the 3-Clause BSD License, see the LICENSE file for details.\n//------------------------------------------------------------------------------\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'highlight.js/styles/zenburn.css';\nimport './bootstrap-layout.css';\nimport './index.css';\nimport registerServiceWorker from './registerServiceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport { createStore, combineReducers } from 'redux';\nimport { Provider } from 'react-redux';\n\nimport { backendReducer } from './reducers/backend';\nimport { statusReducer } from './reducers/status';\nimport { projectsReducer } from './reducers/projects';\nimport { jobsReducer } from './reducers/jobs';\nimport {\n  backendStatusSet, backendCountdownSet,\n  BACKEND_CONNECTING, BACKEND_OPENED, BACKEND_CLOSED\n} from './actions/backend';\nimport { backend, Backend } from './utils/Backend';\nimport { messageStoreEvent } from './utils/backendStoreConnectors';\n\nimport ScrapyDoApp from './components/ScrapyDoApp';\n\n//------------------------------------------------------------------------------\n// Redux store\n//------------------------------------------------------------------------------\nexport const store = createStore(\n  combineReducers({\n    backend: backendReducer,\n    status: statusReducer,\n    projects: projectsReducer,\n    jobs: jobsReducer\n  }),\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\n//------------------------------------------------------------------------------\n// Make backend events change the state of the stare\n//------------------------------------------------------------------------------\nconst backendStoreEvent = (event, data) => {\n  if(event === Backend.CONNECTING)\n    store.dispatch(backendStatusSet(BACKEND_CONNECTING));\n  else if(event === Backend.OPENED)\n    store.dispatch(backendStatusSet(BACKEND_OPENED));\n  else if(event === Backend.CLOSED)\n    store.dispatch(backendStatusSet(BACKEND_CLOSED));\n  else if(event === Backend.COUNTDOWN)\n    store.dispatch(backendCountdownSet(data));\n};\n\nbackend.addEventListener(backendStoreEvent);\nbackend.addEventListener(messageStoreEvent);\n\n//------------------------------------------------------------------------------\n// The App component\n//------------------------------------------------------------------------------\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <ScrapyDoApp />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root'));\n\nregisterServiceWorker();\n","//------------------------------------------------------------------------------\n// Author: Lukasz Janyst <lukasz@jany.st>\n// Date: 09.02.2018\n//\n// Licensed under the 3-Clause BSD License, see the LICENSE file for details.\n//------------------------------------------------------------------------------\n\nimport { store } from '../';\nimport { Backend } from './Backend';\nimport {\n  daemonStatusSet, projectsStatusSet, jobsStatusSet\n} from '../actions/status';\nimport {\n  projectListSet, projectPush, projectRemove\n} from '../actions/projects';\nimport { jobListSet, jobUpdate, jobRemove } from '../actions/jobs';\n\n//------------------------------------------------------------------------------\n// Make backend events change the state of the stare\n//------------------------------------------------------------------------------\nexport const messageStoreEvent = (event, data) => {\n  if(event !== Backend.MSG_RECEIVED)\n    return;\n\n  switch(data.type) {\n  case 'DAEMON_STATUS':\n    store.dispatch(daemonStatusSet(data));\n    break;\n  case 'PROJECTS_STATUS':\n    store.dispatch(projectsStatusSet(data));\n    break;\n  case 'JOBS_STATUS':\n    store.dispatch(jobsStatusSet(data));\n    break;\n  case 'PROJECT_LIST':\n    store.dispatch(projectListSet(data.projects));\n    break;\n  case 'PROJECT_PUSH':\n    store.dispatch(projectPush(data.name, data.spiders));\n    break;\n  case 'PROJECT_REMOVE':\n    store.dispatch(projectRemove(data.name));\n    break;\n  case 'JOB_LIST':\n    store.dispatch(jobListSet(data.status, data.jobs));\n    break;\n  case 'JOB_UPDATE':\n    store.dispatch(jobUpdate(data.job));\n    break;\n  case 'JOB_REMOVE':\n    store.dispatch(jobRemove(data.jobId));\n    break;\n\n  default:\n    break;\n  }\n};\n"],"sourceRoot":""}